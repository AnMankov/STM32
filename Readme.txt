 * (13.07.2018):
 *   1. Обновление угла открытия и угла вскрытия (в структуре cdt) перенесены из задачи vLineData
 *      т.к. был добавлен Modbus, который должен отправлять актуальные данные независимо от работо-
 *      способности или состояния интерфейса ЛИН.
 * (18.07.2018):
 *   1. Сохранение предыдущего значения байта состояния перед обновлением для дальнейшей проверки и 
 *      установки номера параметра в cdt.srab, если произошло срабатывание (!не изменение, а срабатывание)
 * (20.07.2018):
 *   1. В структуру cdt добавлен параметр CELS. В этой задаче происходит обновление значения этого
 *      парметра - cdt.PTemper. Значение параметра CELS - температура кристалла датчика на платформе.
 *      Необходимо для температурного тестирования
 *   2. Ошибка - если платформа попадает в зону гистерезиса из нормального положения, то перестает обсчитывать
 *      углы. Исправлено
 *   3. Ошибка - если платформа со старта попадает в зону гистерезиса, то будет находиться в состоянии _P_INVALID.
 *      При этом при включении питания некоторое время устанавливается связь с крышкой поэтому крышка и замок будут 
 *      также в ..._INVALID и измерений не будет. 
 *      Исправлено - со старта платформа будет всегда в _P_VALID, а если со старт платформа находится в зоне гистерезиса,
 *      то она будет также в _P_VALID и будет происходить нормальный подсчет углов открытия и вскрытия
 *   4. В структуру TSProgNum добавлены состояния для всех трех устройств
 * (23.07.2018):
 *   1. Ошибка - Данные в параметре ERRCODE обновляются только если есть новый пакет, пришедший через ЛИН.
 *      Исправлено - из задачи vLineData перенесен алгоритм заполнения данных ERRCODE
 * (27.07.2018):
 *   1. Переделан принцип определения углов открытия и вскрытия - введена дополнительная динамическая система координат - ось X совпадает с плоскостью платформы
 *   2. Введены гистерезисы на определение состояния платформы
 *   3. Исправлены ошибки определения состояния всей системы с учетом гистерезисов во всех четырех квадрантах 
 * (10.09.2018):
 *   1. В структуру TSProgNum для универсальности введен TStateByte вместо разрозненных битовых полей
 *   2. Версия программы размещена в начальных адресах Flash (на месте одного из зарезервированных векторов)
 *   3. Настройки по умолчанию 0(PswAdmin), 31.41(PswSuper)
 * (17.05.2019):
 * Для колумбийской версии (на STM32F303CC): 
 *   1. интерфейс ЛИН не нужен (удален); Modbus не нужен (но работоспособность сохранена)
 *   2. удалена работа с магнитометром и гироскопом.
 *   3. добавлена калибровка акселерометра с помощью библиотеки MotionTL - интерфейса нет, процесс происходит через отладчик после первой прошивки
 *   4. расчет углов происходит по формулам из AN4509 (в каталоге DOCS)
 *   5. общая структура устройства - одна база (мастер) и два модуля с датчиком (слейвы)
 *   6. алгоритм взаимодействия блоков устройства: база отправляет запрос на запуск считывания/расчета, модули с датчиком отвечают на запрос по окончании считывания/расчета.
 *   7. краткое описание алгоритма одного цикла работы блока: 
 МК по I2C считывает данные акселерометра (с 3-х осей) каждые ≈275мкс - одна выборка. Накапливается массив из 800 выборок. Если значение по хотя бы одной из выборок превышает 1.5G, весь массив отбрасывается и цикл считается невалидным. Ни одна выборка не превышает 1.5G => вычисляется среднее ускорение для каждой из осей, по которым расчитывается угол.
 Если текущий цикл валидный для связки база - модуль, то расчитывается результирующий угол.
 Для результирующего угла сделан демпфер. 
 * (26.06.2019):
 *   1. Расчеты таймингов CAN в файле .\DOCS\CAN_count.xlsx
 *   2. Расчеты таймингов I2C в файле .\DOCS\CAN_count
 *   3. Создан .\DOCS\Пересчет параметров в адреса Modbus.xlsx
 *   4. Различные описания ДКС, переданные маркетологам .\DOCS\DKS.zip
 * (27.06.2019):
 *   На базе колумбийской версии программы (FC00) создана новая (FC0x) на STM32L4. Предварительно интерфейс связи изменится с CAN на RS-485 (протокол Modbus). На данный момент задача звучала так:
 1. Вариант устройства 1 - на каждой крышке одна база и один модуль с датчиком - максимальная конфигурация с индикацией угла открытия и состояния
 2. Вариант устройства 2 - на каждой из крышек только по одному датчику - минимальная конфигурация без индикации угла открытия, только состояние
 3. Исходя из п.1 и п.2 на базе должен быть реализован Modbus Master для связи с датчиком. На датчике должен быть реализован Modbus Slave для связи с базой (тот же протокол и физические контакты используются в минимальной конфигурации при связи с ПК).  Также на базе должен быть реализован Modbus Slave для связи с ПК или каким то внешним устройством, реализующим Modbus Master - это необходимо для настроек и считывания измеряемых параметров.
 4. На прикладном уровне Modbus Slave в модуле с датчиком необходимо разделить способы обмена: с базой (один набор регистров) с ПК (другой набор регистров).
 
 