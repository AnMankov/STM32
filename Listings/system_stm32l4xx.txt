; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\system_stm32l4xx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\system_stm32l4xx.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I.\Source\Ext_Dev\inc\AT45 -I.\Objects -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\system_stm32l4xx.crf Source\Core\src\system_stm32l4xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;275      */
;;;276    void SystemCoreClockUpdate(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;277    {
;;;278      uint32_t tmp = 0U, msirange = 0U, pllvco = 0U, pllr = 2U, pllsource = 0U, pllm = 2U;
000002  2300              MOVS     r3,#0
000004  2000              MOVS     r0,#0
000006  2200              MOVS     r2,#0
000008  2402              MOVS     r4,#2
00000a  2500              MOVS     r5,#0
00000c  2102              MOVS     r1,#2
;;;279    
;;;280      /* Get MSI Range frequency--------------------------------------------------*/
;;;281      if((RCC->CR & RCC_CR_MSIRGSEL) == RESET)
00000e  4e31              LDR      r6,|L1.212|
000010  6836              LDR      r6,[r6,#0]
000012  f0060608          AND      r6,r6,#8
000016  b92e              CBNZ     r6,|L1.36|
;;;282      { /* MSISRANGE from RCC_CSR applies */
;;;283        msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
000018  4e2e              LDR      r6,|L1.212|
00001a  3694              ADDS     r6,r6,#0x94
00001c  6836              LDR      r6,[r6,#0]
00001e  f3c62003          UBFX     r0,r6,#8,#4
000022  e003              B        |L1.44|
                  |L1.36|
;;;284      }
;;;285      else
;;;286      { /* MSIRANGE from RCC_CR applies */
;;;287        msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
000024  4e2b              LDR      r6,|L1.212|
000026  6836              LDR      r6,[r6,#0]
000028  f3c61003          UBFX     r0,r6,#4,#4
                  |L1.44|
;;;288      }
;;;289      /*MSI frequency range in HZ*/
;;;290      msirange = MSIRangeTable[msirange];
00002c  4e2a              LDR      r6,|L1.216|
00002e  f8560020          LDR      r0,[r6,r0,LSL #2]
;;;291    
;;;292      /* Get SYSCLK source -------------------------------------------------------*/
;;;293      switch (RCC->CFGR & RCC_CFGR_SWS)
000032  4e28              LDR      r6,|L1.212|
000034  68b6              LDR      r6,[r6,#8]
000036  f006060c          AND      r6,r6,#0xc
00003a  b136              CBZ      r6,|L1.74|
00003c  2e04              CMP      r6,#4
00003e  d007              BEQ      |L1.80|
000040  2e08              CMP      r6,#8
000042  d009              BEQ      |L1.88|
000044  2e0c              CMP      r6,#0xc
000046  d135              BNE      |L1.180|
000048  e00a              B        |L1.96|
                  |L1.74|
;;;294      {
;;;295        case 0x00:  /* MSI used as system clock source */
;;;296          SystemCoreClock = msirange;
00004a  4e24              LDR      r6,|L1.220|
00004c  6030              STR      r0,[r6,#0]  ; SystemCoreClock
;;;297          break;
00004e  e034              B        |L1.186|
                  |L1.80|
;;;298    
;;;299        case 0x04:  /* HSI used as system clock source */
;;;300          SystemCoreClock = HSI_VALUE;
000050  4e23              LDR      r6,|L1.224|
000052  4f22              LDR      r7,|L1.220|
000054  603e              STR      r6,[r7,#0]  ; SystemCoreClock
;;;301          break;
000056  e030              B        |L1.186|
                  |L1.88|
;;;302    
;;;303        case 0x08:  /* HSE used as system clock source */
;;;304          SystemCoreClock = HSE_VALUE;
000058  4e22              LDR      r6,|L1.228|
00005a  4f20              LDR      r7,|L1.220|
00005c  603e              STR      r6,[r7,#0]  ; SystemCoreClock
;;;305          break;
00005e  e02c              B        |L1.186|
                  |L1.96|
;;;306    
;;;307        case 0x0C:  /* PLL used as system clock  source */
;;;308          /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
;;;309             SYSCLK = PLL_VCO / PLLR
;;;310             */
;;;311          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
000060  4e1c              LDR      r6,|L1.212|
000062  68f6              LDR      r6,[r6,#0xc]
000064  f0060503          AND      r5,r6,#3
;;;312          pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
000068  4e1a              LDR      r6,|L1.212|
00006a  68f6              LDR      r6,[r6,#0xc]
00006c  f3c61602          UBFX     r6,r6,#4,#3
000070  1c71              ADDS     r1,r6,#1
;;;313    
;;;314          switch (pllsource)
000072  2d02              CMP      r5,#2
000074  d002              BEQ      |L1.124|
000076  2d03              CMP      r5,#3
000078  d108              BNE      |L1.140|
00007a  e003              B        |L1.132|
                  |L1.124|
;;;315          {
;;;316            case 0x02:  /* HSI used as PLL clock source */
;;;317              pllvco = (HSI_VALUE / pllm);
00007c  4e18              LDR      r6,|L1.224|
00007e  fbb6f2f1          UDIV     r2,r6,r1
;;;318              break;
000082  e006              B        |L1.146|
                  |L1.132|
;;;319    
;;;320            case 0x03:  /* HSE used as PLL clock source */
;;;321              pllvco = (HSE_VALUE / pllm);
000084  4e17              LDR      r6,|L1.228|
000086  fbb6f2f1          UDIV     r2,r6,r1
;;;322              break;
00008a  e002              B        |L1.146|
                  |L1.140|
;;;323    
;;;324            default:    /* MSI used as PLL clock source */
;;;325              pllvco = (msirange / pllm);
00008c  fbb0f2f1          UDIV     r2,r0,r1
;;;326              break;
000090  bf00              NOP      
                  |L1.146|
000092  bf00              NOP                            ;318
;;;327          }
;;;328          pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
000094  4e0f              LDR      r6,|L1.212|
000096  68f6              LDR      r6,[r6,#0xc]
000098  f3c62606          UBFX     r6,r6,#8,#7
00009c  4372              MULS     r2,r6,r2
;;;329          pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
00009e  4e0d              LDR      r6,|L1.212|
0000a0  68f6              LDR      r6,[r6,#0xc]
0000a2  f3c66641          UBFX     r6,r6,#25,#2
0000a6  1c76              ADDS     r6,r6,#1
0000a8  0074              LSLS     r4,r6,#1
;;;330          SystemCoreClock = pllvco/pllr;
0000aa  fbb2f6f4          UDIV     r6,r2,r4
0000ae  4f0b              LDR      r7,|L1.220|
0000b0  603e              STR      r6,[r7,#0]  ; SystemCoreClock
;;;331          break;
0000b2  e002              B        |L1.186|
                  |L1.180|
;;;332    
;;;333        default:
;;;334          SystemCoreClock = msirange;
0000b4  4e09              LDR      r6,|L1.220|
0000b6  6030              STR      r0,[r6,#0]  ; SystemCoreClock
;;;335          break;
0000b8  bf00              NOP      
                  |L1.186|
0000ba  bf00              NOP                            ;297
;;;336      }
;;;337      /* Compute HCLK clock frequency --------------------------------------------*/
;;;338      /* Get HCLK prescaler */
;;;339      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
0000bc  4e05              LDR      r6,|L1.212|
0000be  68b6              LDR      r6,[r6,#8]
0000c0  f3c61603          UBFX     r6,r6,#4,#4
0000c4  4f08              LDR      r7,|L1.232|
0000c6  5dbb              LDRB     r3,[r7,r6]
;;;340      /* HCLK clock frequency */
;;;341      SystemCoreClock >>= tmp;
0000c8  4e04              LDR      r6,|L1.220|
0000ca  6836              LDR      r6,[r6,#0]  ; SystemCoreClock
0000cc  40de              LSRS     r6,r6,r3
0000ce  4f03              LDR      r7,|L1.220|
0000d0  603e              STR      r6,[r7,#0]  ; SystemCoreClock
;;;342    }
0000d2  bdf0              POP      {r4-r7,pc}
;;;343    
                          ENDP

                  |L1.212|
                          DCD      0x40021000
                  |L1.216|
                          DCD      MSIRangeTable
                  |L1.220|
                          DCD      SystemCoreClock
                  |L1.224|
                          DCD      0x00f42400
                  |L1.228|
                          DCD      0x007a1200
                  |L1.232|
                          DCD      AHBPrescTable

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;195    
;;;196    void SystemInit(void)
000000  4810              LDR      r0,|L2.68|
;;;197    {
;;;198      /* FPU settings ------------------------------------------------------------*/
;;;199      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;200        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
000002  6800              LDR      r0,[r0,#0]
000004  f4400070          ORR      r0,r0,#0xf00000
000008  490e              LDR      r1,|L2.68|
00000a  6008              STR      r0,[r1,#0]
;;;201      #endif
;;;202    
;;;203      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;204      /* Set MSION bit */
;;;205      RCC->CR |= RCC_CR_MSION;
00000c  480e              LDR      r0,|L2.72|
00000e  6800              LDR      r0,[r0,#0]
000010  f0400001          ORR      r0,r0,#1
000014  490c              LDR      r1,|L2.72|
000016  6008              STR      r0,[r1,#0]
;;;206    
;;;207      /* Reset CFGR register */
;;;208      RCC->CFGR = 0x00000000U;
000018  2000              MOVS     r0,#0
00001a  6088              STR      r0,[r1,#8]
;;;209    
;;;210      /* Reset HSEON, CSSON , HSION, and PLLON bits */
;;;211      RCC->CR &= 0xEAF6FFFFU;
00001c  4608              MOV      r0,r1
00001e  6800              LDR      r0,[r0,#0]
000020  490a              LDR      r1,|L2.76|
000022  4008              ANDS     r0,r0,r1
000024  4908              LDR      r1,|L2.72|
000026  6008              STR      r0,[r1,#0]
;;;212    
;;;213      /* Reset PLLCFGR register */
;;;214      RCC->PLLCFGR = 0x00001000U;
000028  1488              ASRS     r0,r1,#18
00002a  60c8              STR      r0,[r1,#0xc]
;;;215    
;;;216      /* Reset HSEBYP bit */
;;;217      RCC->CR &= 0xFFFBFFFFU;
00002c  4608              MOV      r0,r1
00002e  6800              LDR      r0,[r0,#0]
000030  f4202080          BIC      r0,r0,#0x40000
000034  6008              STR      r0,[r1,#0]
;;;218    
;;;219      /* Disable all interrupts */
;;;220      RCC->CIER = 0x00000000U;
000036  2000              MOVS     r0,#0
000038  6188              STR      r0,[r1,#0x18]
;;;221    
;;;222      /* Configure the Vector Table location add offset address ------------------*/
;;;223    //#ifdef VECT_TAB_SRAM
;;;224    //  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;225    //#else
;;;226    //  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
;;;227    //#endif
;;;228    
;;;229    #ifdef DEBUG
;;;230      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
00003a  03c8              LSLS     r0,r1,#15
00003c  4901              LDR      r1,|L2.68|
00003e  3980              SUBS     r1,r1,#0x80
000040  6008              STR      r0,[r1,#0]
;;;231    #endif
;;;232    }
000042  4770              BX       lr
;;;233    
                          ENDP

                  |L2.68|
                          DCD      0xe000ed88
                  |L2.72|
                          DCD      0x40021000
                  |L2.76|
                          DCD      0xeaf6ffff

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09
                  APBPrescTable
000010  00000000          DCB      0x00,0x00,0x00,0x00
000014  01020304          DCB      0x01,0x02,0x03,0x04
                  MSIRangeTable
                          DCD      0x000186a0
                          DCD      0x00030d40
                          DCD      0x00061a80
                          DCD      0x000c3500
                          DCD      0x000f4240
                          DCD      0x001e8480
                          DCD      0x003d0900
                          DCD      0x007a1200
                          DCD      0x00f42400
                          DCD      0x016e3600
                          DCD      0x01e84800
                          DCD      0x02dc6c00

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x003d0900

;*** Start embedded assembler ***

#line 1 "Source\\Core\\src\\system_stm32l4xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32l4xx_c_5d646a67____REV16|
#line 388 ".\\Source\\Core\\inc\\cmsis_armcc.h"
|__asm___18_system_stm32l4xx_c_5d646a67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32l4xx_c_5d646a67____REVSH|
#line 402
|__asm___18_system_stm32l4xx_c_5d646a67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32l4xx_c_5d646a67____RRX|
#line 587
|__asm___18_system_stm32l4xx_c_5d646a67____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
