; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o.\objects\old_flash_lib.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\old_flash_lib.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I.\Source\Ext_Dev\inc\AT45 -I.\Objects -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\old_flash_lib.crf Source\MCU_Drivers\src\old_flash_lib.cpp]
                          THUMB

                          AREA ||i._Z10FLASH_Lockv||, CODE, READONLY, ALIGN=2

                  _Z10FLASH_Lockv PROC ; FLASH_Lock()
;;;52     
;;;53     void FLASH_Lock()
000000  4803              LDR      r0,|L1.16|
;;;54     {
;;;55       FLASH->CR |= FLASH_CR_LOCK;//блокировка регистра CR
000002  6940              LDR      r0,[r0,#0x14]
000004  f0404000          ORR      r0,r0,#0x80000000
000008  4901              LDR      r1,|L1.16|
00000a  6148              STR      r0,[r1,#0x14]
;;;56     }
00000c  4770              BX       lr
                          ENDP

00000e  0000              DCW      0x0000
                  |L1.16|
                          DCD      0x40022000

                          AREA ||i._Z12FLASH_Unlockv||, CODE, READONLY, ALIGN=2

                  _Z12FLASH_Unlockv PROC ; FLASH_Unlock()
;;;32     
;;;33     void FLASH_Unlock()
000000  4805              LDR      r0,|L2.24|
;;;34     {
;;;35       if((FLASH->CR & FLASH_CR_LOCK) != RESET)
000002  6940              LDR      r0,[r0,#0x14]
000004  f0004000          AND      r0,r0,#0x80000000
000008  b120              CBZ      r0,|L2.20|
;;;36       {
;;;37         /* Authorize the FLASH Registers access */
;;;38         FLASH->KEYR = FLASH_KEY1;
00000a  4804              LDR      r0,|L2.28|
00000c  4902              LDR      r1,|L2.24|
00000e  6088              STR      r0,[r1,#8]
;;;39         FLASH->KEYR = FLASH_KEY2;
000010  4803              LDR      r0,|L2.32|
000012  6088              STR      r0,[r1,#8]
                  |L2.20|
;;;40       }  
;;;41     }
000014  4770              BX       lr
;;;42     
                          ENDP

000016  0000              DCW      0x0000
                  |L2.24|
                          DCD      0x40022000
                  |L2.28|
                          DCD      0x45670123
                  |L2.32|
                          DCD      0xcdef89ab

                          AREA ||i._Z15FLASH_GetStatusv||, CODE, READONLY, ALIGN=2

                  _Z15FLASH_GetStatusv PROC ; FLASH_GetStatus()
;;;2      
;;;3      FLASH_Status FLASH_GetStatus()
000000  2004              MOVS     r0,#4
;;;4      {
;;;5        FLASH_Status FLASHstatus = FLASH_COMPLETE;
;;;6        
;;;7        if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
000002  490c              LDR      r1,|L3.52|
000004  6909              LDR      r1,[r1,#0x10]
000006  f4013180          AND      r1,r1,#0x10000
00000a  f5b13f80          CMP      r1,#0x10000
00000e  d101              BNE      |L3.20|
;;;8        {
;;;9          FLASHstatus = FLASH_BUSY;
000010  2001              MOVS     r0,#1
000012  e00e              B        |L3.50|
                  |L3.20|
;;;10       }
;;;11       else 
;;;12       {  
;;;13         if((FLASH->SR & (uint32_t)FLASH_FLAG_WRPERR)!= (uint32_t)0x00)
000014  4907              LDR      r1,|L3.52|
000016  6909              LDR      r1,[r1,#0x10]
000018  f0010110          AND      r1,r1,#0x10
00001c  b109              CBZ      r1,|L3.34|
;;;14         { 
;;;15           FLASHstatus = FLASH_ERROR_WRP;
00001e  2002              MOVS     r0,#2
000020  e007              B        |L3.50|
                  |L3.34|
;;;16         }
;;;17         else 
;;;18         {
;;;19           if((FLASH->SR & (uint32_t)(FLASH_SR_PGERR)) != (uint32_t)0x00)
000022  4904              LDR      r1,|L3.52|
000024  6909              LDR      r1,[r1,#0x10]
000026  f0010120          AND      r1,r1,#0x20
00002a  b109              CBZ      r1,|L3.48|
;;;20           {
;;;21             FLASHstatus = FLASH_ERROR_PROGRAM; 
00002c  2003              MOVS     r0,#3
00002e  e000              B        |L3.50|
                  |L3.48|
;;;22           }
;;;23           else
;;;24           {
;;;25             FLASHstatus = FLASH_COMPLETE;
000030  2004              MOVS     r0,#4
                  |L3.50|
;;;26           }
;;;27         }
;;;28       }
;;;29       /* Return the FLASH Status */
;;;30       return FLASHstatus;
;;;31     }
000032  4770              BX       lr
;;;32     
                          ENDP

                  |L3.52|
                          DCD      0x40022000

                          AREA ||i._Z15FLASH_OB_Unlockv||, CODE, READONLY, ALIGN=2

                  _Z15FLASH_OB_Unlockv PROC ; FLASH_OB_Unlock()
;;;42     
;;;43     void FLASH_OB_Unlock()
000000  4805              LDR      r0,|L4.24|
;;;44     {
;;;45       if((FLASH->CR & FLASH_CR_OPTLOCK) == SET)
000002  6940              LDR      r0,[r0,#0x14]
000004  f0004080          AND      r0,r0,#0x40000000
000008  2801              CMP      r0,#1
00000a  d104              BNE      |L4.22|
;;;46       { 
;;;47         /* Unlocking the option bytes block access */
;;;48         FLASH->OPTKEYR = FLASH_OPTKEY1;
00000c  4803              LDR      r0,|L4.28|
00000e  4902              LDR      r1,|L4.24|
000010  60c8              STR      r0,[r1,#0xc]
;;;49         FLASH->OPTKEYR = FLASH_OPTKEY2;
000012  4803              LDR      r0,|L4.32|
000014  60c8              STR      r0,[r1,#0xc]
                  |L4.22|
;;;50       }
;;;51     }
000016  4770              BX       lr
;;;52     
                          ENDP

                  |L4.24|
                          DCD      0x40022000
                  |L4.28|
                          DCD      0x45670123
                  |L4.32|
                          DCD      0xcdef89ab

                          AREA ||.ARM.exidx||, LINKORDER=||i._Z15FLASH_GetStatusv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._Z15FLASH_GetStatusv||
                          DCD      0x00000001

                          AREA ||area_number.6||, LINKORDER=||i._Z12FLASH_Unlockv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z12FLASH_Unlockv||
                          DCD      0x00000001

                          AREA ||area_number.7||, LINKORDER=||i._Z15FLASH_OB_Unlockv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z15FLASH_OB_Unlockv||
                          DCD      0x00000001

                          AREA ||area_number.8||, LINKORDER=||i._Z10FLASH_Lockv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z10FLASH_Lockv||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "Source\\MCU_Drivers\\src\\old_flash_lib.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_old_flash_lib_cpp_fcb9174c___ZN39_INTERNAL_17_old_flash_lib_cpp_fcb9174c7__REV16Ej|
#line 388 ".\\Source\\Core\\inc\\cmsis_armcc.h"
|__asm___17_old_flash_lib_cpp_fcb9174c___ZN39_INTERNAL_17_old_flash_lib_cpp_fcb9174c7__REV16Ej| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_old_flash_lib_cpp_fcb9174c___ZN39_INTERNAL_17_old_flash_lib_cpp_fcb9174c7__REVSHEi|
#line 402
|__asm___17_old_flash_lib_cpp_fcb9174c___ZN39_INTERNAL_17_old_flash_lib_cpp_fcb9174c7__REVSHEi| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___17_old_flash_lib_cpp_fcb9174c___ZN39_INTERNAL_17_old_flash_lib_cpp_fcb9174c5__RRXEj|
#line 587
|__asm___17_old_flash_lib_cpp_fcb9174c___ZN39_INTERNAL_17_old_flash_lib_cpp_fcb9174c5__RRXEj| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
