; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o.\objects\button.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\button.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I"..\Lib\CRC Modbus\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I..\Lib\Objects -I.\Source\Ext_Dev\inc\AT45 -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\button.crf Source\Ext_Dev\src\Button.cpp]
                          THUMB

                          AREA ||i._ZN7TButton4initEv||, CODE, READONLY, ALIGN=2

                  _ZN7TButton4initEv PROC ; TButton::init()
;;;16     
;;;17     void TButton::init()
000000  b510              PUSH     {r4,lr}
;;;18     {
000002  b088              SUB      sp,sp,#0x20
000004  4604              MOV      r4,r0
;;;19       if ( !LL_AHB1_GRP1_IsEnabledClock( Pin.ClkPortMask ) )
000006  68a1              LDR      r1,[r4,#8]
000008  6888              LDR      r0,[r1,#8]
00000a  4913              LDR      r1,|L1.88|
00000c  6c89              LDR      r1,[r1,#0x48]
00000e  4001              ANDS     r1,r1,r0
000010  4281              CMP      r1,r0
000012  d101              BNE      |L1.24|
000014  2101              MOVS     r1,#1
000016  e000              B        |L1.26|
                  |L1.24|
000018  2100              MOVS     r1,#0
                  |L1.26|
00001a  b969              CBNZ     r1,|L1.56|
;;;20       {
;;;21         LL_AHB1_GRP1_EnableClock( Pin.ClkPortMask );
00001c  68a1              LDR      r1,[r4,#8]
00001e  6888              LDR      r0,[r1,#8]
000020  490d              LDR      r1,|L1.88|
000022  6c89              LDR      r1,[r1,#0x48]
000024  4301              ORRS     r1,r1,r0
000026  4a0c              LDR      r2,|L1.88|
000028  6491              STR      r1,[r2,#0x48]
00002a  4611              MOV      r1,r2
00002c  6c89              LDR      r1,[r1,#0x48]
00002e  4001              ANDS     r1,r1,r0
000030  9101              STR      r1,[sp,#4]
000032  bf00              NOP      
000034  bf00              NOP      
000036  bf00              NOP      
                  |L1.56|
;;;22       }
;;;23     
;;;24       LL_GPIO_InitTypeDef GPIO_InitStruct;
;;;25       GPIO_InitStruct.Pin        = Pin.Nbr;
000038  68a0              LDR      r0,[r4,#8]
00003a  6840              LDR      r0,[r0,#4]
00003c  9002              STR      r0,[sp,#8]
;;;26       GPIO_InitStruct.Mode       = LL_GPIO_MODE_INPUT;
00003e  2000              MOVS     r0,#0
000040  9003              STR      r0,[sp,#0xc]
;;;27       GPIO_InitStruct.Speed      = LL_GPIO_SPEED_FREQ_LOW;
000042  9004              STR      r0,[sp,#0x10]
;;;28       GPIO_InitStruct.Pull       = LL_GPIO_PULL_UP;
000044  2001              MOVS     r0,#1
000046  9006              STR      r0,[sp,#0x18]
;;;29     
;;;30       LL_GPIO_Init( Pin.Gpio, &GPIO_InitStruct );
000048  68a1              LDR      r1,[r4,#8]
00004a  6808              LDR      r0,[r1,#0]
00004c  a902              ADD      r1,sp,#8
00004e  f7fffffe          BL       LL_GPIO_Init
;;;31     }
000052  b008              ADD      sp,sp,#0x20
000054  bd10              POP      {r4,pc}
;;;32     
                          ENDP

000056  0000              DCW      0x0000
                  |L1.88|
                          DCD      0x40021000

                          AREA ||i._ZN7TButtonC1ERK4TPin||, CODE, READONLY, ALIGN=1

                  _ZN7TButtonC2ERK4TPin                  ; Alternate entry point ; TButton::TButton__sub_object(const TPin&)
                  _ZN7TButtonC1ERK4TPin PROC ; TButton::TButton(const TPin&)
;;;4      
;;;5      TButton::TButton( const TPin &_Pin )
;;;6      :
;;;7      Pin( _Pin )
;;;8      {
;;;9      
;;;10     }
;;;11     
000000  6081              STR      r1,[r0,#8]
000002  4770              BX       lr
                          ENDP


                          AREA ||i._ZN7TButtonD1Ev||, CODE, READONLY, ALIGN=1

                  _ZN7TButtonD2Ev                  ; Alternate entry point ; TButton::~TButton__sub_object()
                  _ZN7TButtonD1Ev PROC ; TButton::~TButton()
;;;11     
;;;12     TButton::~TButton()
;;;13     {
;;;14     
;;;15     }
;;;16     
000000  4770              BX       lr
                          ENDP


                          AREA ||i._ZNK7TButton4readEv||, CODE, READONLY, ALIGN=1

                  _ZNK7TButton4readEv PROC ; TButton::read() const
;;;32     
;;;33     TButton::TState TButton::read() const
000000  4601              MOV      r1,r0
;;;34     {
;;;35       return TState( LL_GPIO_IsInputPinSet( Pin.Gpio, Pin.Nbr ) );
000002  688b              LDR      r3,[r1,#8]
000004  e9d32000          LDRD     r2,r0,[r3,#0]
000008  6913              LDR      r3,[r2,#0x10]
00000a  4003              ANDS     r3,r3,r0
00000c  4283              CMP      r3,r0
00000e  d101              BNE      |L4.20|
000010  2301              MOVS     r3,#1
000012  e000              B        |L4.22|
                  |L4.20|
000014  2300              MOVS     r3,#0
                  |L4.22|
000016  b2d8              UXTB     r0,r3
;;;36     }
000018  4770              BX       lr
                          ENDP


                          AREA ||i.__sti___10_Button_cpp_Btn||, CODE, READONLY, ALIGN=2

                  __sti___10_Button_cpp_Btn PROC
000000  b510              PUSH     {r4,lr}
000002  4905              LDR      r1,|L5.24|
000004  4805              LDR      r0,|L5.28|
000006  f7fffffe          BL       _ZN7TButtonC1ERK4TPin ; TButton::TButton(const TPin&)
00000a  4604              MOV      r4,r0
00000c  4a04              LDR      r2,|L5.32|
00000e  4905              LDR      r1,|L5.36|
000010  f7fffffe          BL       __aeabi_atexit
000014  bd10              POP      {r4,pc}
                          ENDP

000016  0000              DCW      0x0000
                  |L5.24|
                          DCD      Button_HW
                  |L5.28|
                          DCD      Btn
                  |L5.32|
                          DCD      __dso_handle
                  |L5.36|
                          DCD      _ZN7TButtonD1Ev ; TButton::~TButton()

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN7TButtonC1ERK4TPin||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN7TButtonC1ERK4TPin||
                          DCD      0x00000001

                          AREA ||area_number.7||, LINKORDER=||i._ZN7TButtonD1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN7TButtonD1Ev||
                          DCD      0x00000001

                          AREA ||area_number.8||, LINKORDER=||i._ZN7TButton4initEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN7TButton4initEv||
                          DCD      0x00000001

                          AREA ||area_number.9||, LINKORDER=||i._ZNK7TButton4readEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK7TButton4readEv||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i.__sti___10_Button_cpp_Btn||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__sti___10_Button_cpp_Btn||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  Btn
                          %        16

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___10_Button_cpp_Btn

;*** Start embedded assembler ***

#line 1 "Source\\Ext_Dev\\src\\Button.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_Button_cpp_Btn___ZN27_INTERNAL_10_Button_cpp_Btn7__REV16Ej|
#line 388 ".\\Source\\Core\\inc\\cmsis_armcc.h"
|__asm___10_Button_cpp_Btn___ZN27_INTERNAL_10_Button_cpp_Btn7__REV16Ej| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_Button_cpp_Btn___ZN27_INTERNAL_10_Button_cpp_Btn7__REVSHEi|
#line 402
|__asm___10_Button_cpp_Btn___ZN27_INTERNAL_10_Button_cpp_Btn7__REVSHEi| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_Button_cpp_Btn___ZN27_INTERNAL_10_Button_cpp_Btn5__RRXEj|
#line 587
|__asm___10_Button_cpp_Btn___ZN27_INTERNAL_10_Button_cpp_Btn5__RRXEj| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
