; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o.\objects\ad8402.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\ad8402.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I"..\Lib\CRC Modbus\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I..\Lib\Objects -I.\Source\Ext_Dev\inc\AT45 -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\ad8402.crf Source\Ext_Dev\src\AD8402.cpp]
                          THUMB

                          AREA ||i._ZN30_INTERNAL_10_AD8402_cpp_AD840220LL_GPIO_SetOutputPinEP12GPIO_TypeDefj||, CODE, READONLY, ALIGN=1

                  _ZN30_INTERNAL_10_AD8402_cpp_AD840220LL_GPIO_SetOutputPinEP12GPIO_TypeDefj PROC ; [local to AD8402_cpp]::LL_GPIO_SetOutputPin(GPIO_TypeDef*, unsigned)
;;;963      */
;;;964    __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
000000  6181              STR      r1,[r0,#0x18]
;;;965    {
;;;966      WRITE_REG(GPIOx->BSRR, PinMask);
;;;967    }
000002  4770              BX       lr
;;;968    
                          ENDP


                          AREA ||i._ZN30_INTERNAL_10_AD8402_cpp_AD840222LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj||, CODE, READONLY, ALIGN=1

                  _ZN30_INTERNAL_10_AD8402_cpp_AD840222LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj PROC ; [local to AD8402_cpp]::LL_GPIO_ResetOutputPin(GPIO_TypeDef*, unsigned)
;;;992      */
;;;993    __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
000000  6281              STR      r1,[r0,#0x28]
;;;994    {
;;;995      WRITE_REG(GPIOx->BRR, PinMask);
;;;996    }
000002  4770              BX       lr
;;;997    
                          ENDP


                          AREA ||i._ZN8T_AD840210get_resistENS_8TChannelE||, CODE, READONLY, ALIGN=2

                  _ZN8T_AD840210get_resistENS_8TChannelE PROC ; T_AD8402::get_resist(T_AD8402::TChannel)
;;;203    
;;;204    float T_AD8402::get_resist( TChannel Chn )
000000  b57c              PUSH     {r2-r6,lr}
;;;205    {
000002  4605              MOV      r5,r0
;;;206      struct TChnIx
;;;207      {
;;;208        TChannel Chn;
;;;209        uint8_t  Ix;
;;;210      };
;;;211      
;;;212      TChnIx ChnIx[] =
000004  480c              LDR      r0,|L3.56|
000006  6800              LDR      r0,[r0,#0]  ; <Data4>
000008  9001              STR      r0,[sp,#4]
;;;213      {
;;;214       { TChannel::__ONE, 0 },
;;;215       { TChannel::__TWO, 1 },
;;;216      };
;;;217    
;;;218      uint8_t Ix = 0U;
00000a  2300              MOVS     r3,#0
;;;219    
;;;220      for ( auto item : ChnIx )
00000c  aa01              ADD      r2,sp,#4
00000e  4610              MOV      r0,r2
000010  1d14              ADDS     r4,r2,#4
000012  e008              B        |L3.38|
                  |L3.20|
000014  8806              LDRH     r6,[r0,#0]
000016  9600              STR      r6,[sp,#0]
;;;221      {
;;;222        if ( item.Chn == Chn )
000018  f89d6000          LDRB     r6,[sp,#0]
00001c  428e              CMP      r6,r1
00001e  d101              BNE      |L3.36|
;;;223        {
;;;224          Ix = item.Ix;
000020  f89d3001          LDRB     r3,[sp,#1]
                  |L3.36|
;;;225        }
;;;226    
;;;227        break;
000024  e001              B        |L3.42|
                  |L3.38|
000026  42a0              CMP      r0,r4
000028  d1f4              BNE      |L3.20|
                  |L3.42|
00002a  bf00              NOP      
;;;228      }
;;;229    
;;;230      return Resist[ Ix ].Val;
00002c  4803              LDR      r0,|L3.60|
00002e  eb0000c3          ADD      r0,r0,r3,LSL #3
000032  ed900a00          VLDR     s0,[r0,#0]
;;;231    }
000036  bd7c              POP      {r2-r6,pc}
                          ENDP

                  |L3.56|
                          DCD      ||.constdata||
                  |L3.60|
                          DCD      _ZN8T_AD84026ResistE ; T_AD8402::Resist

                          AREA ||i._ZN8T_AD840212reverse_bitsEh||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD840212reverse_bitsEh PROC ; T_AD8402::reverse_bits(unsigned char)
;;;143    
;;;144    uint8_t T_AD8402::reverse_bits( uint8_t Nbr )
000000  4602              MOV      r2,r0
;;;145    {
;;;146       Nbr = (Nbr & 0x55) << 1 | (Nbr & 0xAA) >> 1;
000002  f0010055          AND      r0,r1,#0x55
000006  0040              LSLS     r0,r0,#1
000008  f00103aa          AND      r3,r1,#0xaa
00000c  ea400163          ORR      r1,r0,r3,ASR #1
;;;147       Nbr = (Nbr & 0x33) << 2 | (Nbr & 0xCC) >> 2;
000010  f0010033          AND      r0,r1,#0x33
000014  0080              LSLS     r0,r0,#2
000016  f00103cc          AND      r3,r1,#0xcc
00001a  ea4001a3          ORR      r1,r0,r3,ASR #2
;;;148       Nbr = (Nbr & 0x0F) << 4 | (Nbr & 0xF0) >> 4;
00001e  0708              LSLS     r0,r1,#28
000020  0e00              LSRS     r0,r0,#24
000022  ea401111          ORR      r1,r0,r1,LSR #4
;;;149       
;;;150       return Nbr;
000026  4608              MOV      r0,r1
;;;151    }
000028  4770              BX       lr
;;;152    
                          ENDP


                          AREA ||i._ZN8T_AD840213data_bit_ctrlEPh||, CODE, READONLY, ALIGN=2

                  _ZN8T_AD840213data_bit_ctrlEPh PROC ; T_AD8402::data_bit_ctrl(unsigned char*)
;;;111    
;;;112    void T_AD8402::data_bit_ctrl( uint8_t *Data )
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;113    {
000004  b08b              SUB      sp,sp,#0x2c
000006  4606              MOV      r6,r0
000008  460c              MOV      r4,r1
;;;114      typedef void ( T_AD8402::*TFnct )();
;;;115      
;;;116      struct TBitCtrl
;;;117      {
;;;118        TFnct   Fnct;
;;;119        uint8_t Remainder;
;;;120      };
;;;121      
;;;122      TBitCtrl BitCtrl[] =
00000a  2218              MOVS     r2,#0x18
00000c  491c              LDR      r1,|L5.128|
00000e  a805              ADD      r0,sp,#0x14
000010  f7fffffe          BL       __aeabi_memcpy4
;;;123      {
;;;124        { &T_AD8402::sdi_set, 1U },
;;;125        { &T_AD8402::sdi_clr, 0U },
;;;126      };
;;;127      
;;;128      uint8_t Remainder = *Data % 2;
000014  7820              LDRB     r0,[r4,#0]
000016  eb0071d0          ADD      r1,r0,r0,LSR #31
00001a  1049              ASRS     r1,r1,#1
00001c  eba00141          SUB      r1,r0,r1,LSL #1
000020  b2c9              UXTB     r1,r1
000022  9104              STR      r1,[sp,#0x10]
;;;129      
;;;130      for ( auto item : BitCtrl )
000024  af05              ADD      r7,sp,#0x14
000026  463d              MOV      r5,r7
000028  f1070a18          ADD      r10,r7,#0x18
00002c  e01e              B        |L5.108|
                  |L5.46|
00002e  e9d50201          LDRD     r0,r2,[r5,#4]
000032  6829              LDR      r1,[r5,#0]
000034  e9cd0202          STRD     r0,r2,[sp,#8]
000038  9101              STR      r1,[sp,#4]
;;;131      {
;;;132        if ( Remainder == item.Remainder )
00003a  f89d100c          LDRB     r1,[sp,#0xc]
00003e  9804              LDR      r0,[sp,#0x10]
000040  4281              CMP      r1,r0
000042  d112              BNE      |L5.106|
;;;133        {
;;;134          ( this->*item.Fnct )();
000044  9802              LDR      r0,[sp,#8]
000046  eb060860          ADD      r8,r6,r0,ASR #1
00004a  f0000001          AND      r0,r0,#1
00004e  b908              CBNZ     r0,|L5.84|
000050  9801              LDR      r0,[sp,#4]
000052  e006              B        |L5.98|
                  |L5.84|
000054  f8d80000          LDR      r0,[r8,#0]
000058  9901              LDR      r1,[sp,#4]
00005a  eb000901          ADD      r9,r0,r1
00005e  f8d90000          LDR      r0,[r9,#0]
                  |L5.98|
000062  4683              MOV      r11,r0
000064  4640              MOV      r0,r8
000066  47d8              BLX      r11
;;;135          
;;;136          break;
000068  e002              B        |L5.112|
                  |L5.106|
;;;137        }
00006a  350c              ADDS     r5,r5,#0xc
                  |L5.108|
00006c  4555              CMP      r5,r10
00006e  d1de              BNE      |L5.46|
                  |L5.112|
000070  bf00              NOP                            ;136
;;;138        
;;;139      }
;;;140      
;;;141      *Data >>= 1U;
000072  7820              LDRB     r0,[r4,#0]
000074  1040              ASRS     r0,r0,#1
000076  7020              STRB     r0,[r4,#0]
;;;142    }
000078  b00b              ADD      sp,sp,#0x2c
00007a  e8bd8ff0          POP      {r4-r11,pc}
;;;143    
                          ENDP

00007e  0000              DCW      0x0000
                  |L5.128|
                          DCD      ||.constdata||+0x4

                          AREA ||i._ZN8T_AD84024initEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84024initEv PROC ; T_AD8402::init()
;;;25     
;;;26     void T_AD8402::init()
000000  b510              PUSH     {r4,lr}
;;;27     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;28       HW.CS.en_clk( HW.CS.ClkPortMask );
000006  e9d40102          LDRD     r0,r1,[r4,#8]
00000a  4788              BLX      r1
;;;29       HW.SHDN.en_clk( HW.SHDN.ClkPortMask );
00000c  e9d40107          LDRD     r0,r1,[r4,#0x1c]
000010  4788              BLX      r1
;;;30       HW.RS.en_clk( HW.RS.ClkPortMask );
000012  e9d4010c          LDRD     r0,r1,[r4,#0x30]
000016  4788              BLX      r1
;;;31       HW.CLK.en_clk( HW.CLK.ClkPortMask );
000018  e9d40111          LDRD     r0,r1,[r4,#0x44]
00001c  4788              BLX      r1
;;;32       HW.SDI.en_clk( HW.SDI.ClkPortMask );
00001e  e9d40116          LDRD     r0,r1,[r4,#0x58]
000022  4788              BLX      r1
;;;33     
;;;34       LL_GPIO_InitTypeDef GPIO_InitStruct;
;;;35       
;;;36       do
000024  bf00              NOP      
                  |L6.38|
;;;37       {
;;;38         GPIO_InitStruct.Pin        = HW.CS.Nbr;
000026  6860              LDR      r0,[r4,#4]
000028  9000              STR      r0,[sp,#0]
;;;39         GPIO_InitStruct.Mode       = LL_GPIO_MODE_OUTPUT;
00002a  2001              MOVS     r0,#1
00002c  9001              STR      r0,[sp,#4]
;;;40         GPIO_InitStruct.Speed      = LL_GPIO_SPEED_FREQ_VERY_HIGH;
00002e  2003              MOVS     r0,#3
000030  9002              STR      r0,[sp,#8]
;;;41         GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
000032  2000              MOVS     r0,#0
000034  9003              STR      r0,[sp,#0xc]
;;;42         GPIO_InitStruct.Pull       = LL_GPIO_PULL_NO;
000036  9004              STR      r0,[sp,#0x10]
;;;43       } while ( SUCCESS != LL_GPIO_Init( HW.CS.Gpio, &GPIO_InitStruct ) );
000038  4669              MOV      r1,sp
00003a  6820              LDR      r0,[r4,#0]
00003c  f7fffffe          BL       LL_GPIO_Init
000040  2800              CMP      r0,#0
000042  d1f0              BNE      |L6.38|
;;;44       
;;;45       do
000044  bf00              NOP      
                  |L6.70|
;;;46       {
;;;47         GPIO_InitStruct.Pin        = HW.SHDN.Nbr;
000046  69a0              LDR      r0,[r4,#0x18]
000048  9000              STR      r0,[sp,#0]
;;;48       } while ( SUCCESS != LL_GPIO_Init( HW.SHDN.Gpio, &GPIO_InitStruct ) );
00004a  4669              MOV      r1,sp
00004c  6960              LDR      r0,[r4,#0x14]
00004e  f7fffffe          BL       LL_GPIO_Init
000052  2800              CMP      r0,#0
000054  d1f7              BNE      |L6.70|
;;;49       
;;;50       do
000056  bf00              NOP      
                  |L6.88|
;;;51       {
;;;52         GPIO_InitStruct.Pin        = HW.RS.Nbr;
000058  6ae0              LDR      r0,[r4,#0x2c]
00005a  9000              STR      r0,[sp,#0]
;;;53       } while ( SUCCESS != LL_GPIO_Init( HW.RS.Gpio, &GPIO_InitStruct ) );
00005c  4669              MOV      r1,sp
00005e  6aa0              LDR      r0,[r4,#0x28]
000060  f7fffffe          BL       LL_GPIO_Init
000064  2800              CMP      r0,#0
000066  d1f7              BNE      |L6.88|
;;;54       
;;;55       do
000068  bf00              NOP      
                  |L6.106|
;;;56       {
;;;57         GPIO_InitStruct.Pin        = HW.CLK.Nbr;
00006a  6c20              LDR      r0,[r4,#0x40]
00006c  9000              STR      r0,[sp,#0]
;;;58       } while ( SUCCESS != LL_GPIO_Init( HW.CLK.Gpio, &GPIO_InitStruct ) );
00006e  4669              MOV      r1,sp
000070  6be0              LDR      r0,[r4,#0x3c]
000072  f7fffffe          BL       LL_GPIO_Init
000076  2800              CMP      r0,#0
000078  d1f7              BNE      |L6.106|
;;;59       
;;;60       do
00007a  bf00              NOP      
                  |L6.124|
;;;61       {
;;;62         GPIO_InitStruct.Pin        = HW.SDI.Nbr;
00007c  6d60              LDR      r0,[r4,#0x54]
00007e  9000              STR      r0,[sp,#0]
;;;63       } while ( SUCCESS != LL_GPIO_Init( HW.SDI.Gpio, &GPIO_InitStruct ) );
000080  4669              MOV      r1,sp
000082  6d20              LDR      r0,[r4,#0x50]
000084  f7fffffe          BL       LL_GPIO_Init
000088  2800              CMP      r0,#0
00008a  d1f7              BNE      |L6.124|
;;;64       
;;;65       latch_set();
00008c  4620              MOV      r0,r4
00008e  f7fffffe          BL       _ZN8T_AD84029latch_setEv ; T_AD8402::latch_set()
;;;66       shdn_clr(); //КЗ W и B => Rpot = Rw_ohm
000092  4620              MOV      r0,r4
000094  f7fffffe          BL       _ZN8T_AD84028shdn_clrEv ; T_AD8402::shdn_clr()
;;;67       rs_set();
000098  4620              MOV      r0,r4
00009a  f7fffffe          BL       _ZN8T_AD84026rs_setEv ; T_AD8402::rs_set()
;;;68       clk_clr();
00009e  4620              MOV      r0,r4
0000a0  f7fffffe          BL       _ZN8T_AD84027clk_clrEv ; T_AD8402::clk_clr()
;;;69       sdi_clr(); 
0000a4  4620              MOV      r0,r4
0000a6  f7fffffe          BL       _ZN8T_AD84027sdi_clrEv ; T_AD8402::sdi_clr()
;;;70     }
0000aa  b006              ADD      sp,sp,#0x18
0000ac  bd10              POP      {r4,pc}
;;;71     
                          ENDP


                          AREA ||i._ZN8T_AD84026rs_clrEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84026rs_clrEv PROC ; T_AD8402::rs_clr()
;;;188    
;;;189    void T_AD8402::rs_clr()
000000  b510              PUSH     {r4,lr}
;;;190    {
000002  4604              MOV      r4,r0
;;;191      LL_GPIO_ResetOutputPin( HW.RS.Gpio, HW.RS.Nbr );
000004  e9d4010a          LDRD     r0,r1,[r4,#0x28]
000008  f7fffffe          BL       _ZN30_INTERNAL_10_AD8402_cpp_AD840222LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj ; [local to AD8402_cpp]::LL_GPIO_ResetOutputPin(GPIO_TypeDef*, unsigned)
;;;192    }
00000c  bd10              POP      {r4,pc}
;;;193    
                          ENDP


                          AREA ||i._ZN8T_AD84026rs_setEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84026rs_setEv PROC ; T_AD8402::rs_set()
;;;163    
;;;164    void T_AD8402::rs_set()
000000  b510              PUSH     {r4,lr}
;;;165    {
000002  4604              MOV      r4,r0
;;;166      LL_GPIO_SetOutputPin( HW.RS.Gpio, HW.RS.Nbr );
000004  e9d4010a          LDRD     r0,r1,[r4,#0x28]
000008  f7fffffe          BL       _ZN30_INTERNAL_10_AD8402_cpp_AD840220LL_GPIO_SetOutputPinEP12GPIO_TypeDefj ; [local to AD8402_cpp]::LL_GPIO_SetOutputPin(GPIO_TypeDef*, unsigned)
;;;167    }
00000c  bd10              POP      {r4,pc}
;;;168    
                          ENDP


                          AREA ||i._ZN8T_AD84027clk_clrEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84027clk_clrEv PROC ; T_AD8402::clk_clr()
;;;193    
;;;194    void T_AD8402::clk_clr()
000000  b510              PUSH     {r4,lr}
;;;195    {
000002  4604              MOV      r4,r0
;;;196      LL_GPIO_ResetOutputPin( HW.CLK.Gpio, HW.CLK.Nbr );
000004  e9d4010f          LDRD     r0,r1,[r4,#0x3c]
000008  f7fffffe          BL       _ZN30_INTERNAL_10_AD8402_cpp_AD840222LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj ; [local to AD8402_cpp]::LL_GPIO_ResetOutputPin(GPIO_TypeDef*, unsigned)
;;;197    }
00000c  bd10              POP      {r4,pc}
;;;198    
                          ENDP


                          AREA ||i._ZN8T_AD84027clk_setEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84027clk_setEv PROC ; T_AD8402::clk_set()
;;;168    
;;;169    void T_AD8402::clk_set()
000000  b510              PUSH     {r4,lr}
;;;170    {
000002  4604              MOV      r4,r0
;;;171      LL_GPIO_SetOutputPin( HW.CLK.Gpio, HW.CLK.Nbr );
000004  e9d4010f          LDRD     r0,r1,[r4,#0x3c]
000008  f7fffffe          BL       _ZN30_INTERNAL_10_AD8402_cpp_AD840220LL_GPIO_SetOutputPinEP12GPIO_TypeDefj ; [local to AD8402_cpp]::LL_GPIO_SetOutputPin(GPIO_TypeDef*, unsigned)
;;;172    }
00000c  bd10              POP      {r4,pc}
;;;173    
                          ENDP


                          AREA ||i._ZN8T_AD84027sdi_clrEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84027sdi_clrEv PROC ; T_AD8402::sdi_clr()
;;;198    
;;;199    void T_AD8402::sdi_clr()
000000  b510              PUSH     {r4,lr}
;;;200    {
000002  4604              MOV      r4,r0
;;;201      LL_GPIO_ResetOutputPin( HW.SDI.Gpio, HW.SDI.Nbr );
000004  e9d40114          LDRD     r0,r1,[r4,#0x50]
000008  f7fffffe          BL       _ZN30_INTERNAL_10_AD8402_cpp_AD840222LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj ; [local to AD8402_cpp]::LL_GPIO_ResetOutputPin(GPIO_TypeDef*, unsigned)
;;;202    }
00000c  bd10              POP      {r4,pc}
;;;203    
                          ENDP


                          AREA ||i._ZN8T_AD84027sdi_setEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84027sdi_setEv PROC ; T_AD8402::sdi_set()
;;;173    
;;;174    void T_AD8402::sdi_set()
000000  b510              PUSH     {r4,lr}
;;;175    {
000002  4604              MOV      r4,r0
;;;176      LL_GPIO_SetOutputPin( HW.SDI.Gpio, HW.SDI.Nbr );
000004  e9d40114          LDRD     r0,r1,[r4,#0x50]
000008  f7fffffe          BL       _ZN30_INTERNAL_10_AD8402_cpp_AD840220LL_GPIO_SetOutputPinEP12GPIO_TypeDefj ; [local to AD8402_cpp]::LL_GPIO_SetOutputPin(GPIO_TypeDef*, unsigned)
;;;177    }
00000c  bd10              POP      {r4,pc}
;;;178    
                          ENDP


                          AREA ||i._ZN8T_AD84028set_codeEhNS_8TChannelE||, CODE, READONLY, ALIGN=2

                  _ZN8T_AD84028set_codeEhNS_8TChannelE PROC ; T_AD8402::set_code(unsigned char, T_AD8402::TChannel)
;;;71     
;;;72     void T_AD8402::set_code( uint8_t Code, TChannel Chn )
000000  b5f8              PUSH     {r3-r7,lr}
;;;73     {
000002  4607              MOV      r7,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;74       for ( auto &item : Resist ) 
000008  4929              LDR      r1,|L13.176|
00000a  4608              MOV      r0,r1
00000c  f1010310          ADD      r3,r1,#0x10
000010  e015              B        |L13.62|
                  |L13.18|
000012  4602              MOV      r2,r0
;;;75       {
;;;76         if ( Chn == item.Chn )
000014  f892c004          LDRB     r12,[r2,#4]
000018  45ac              CMP      r12,r5
00001a  d10f              BNE      |L13.60|
;;;77         {
;;;78           item.Val = ( (float)Code / ( 1 << RESOLUTION ) ) * Rab_ohm + Rw_ohm;
00001c  ee004a10          VMOV     s0,r4
000020  eeb80a40          VCVT.F32.U32 s0,s0
000024  ed9f1a23          VLDR     s2,|L13.180|
000028  eec00a01          VDIV.F32 s1,s0,s2
00002c  ed9f1a22          VLDR     s2,|L13.184|
000030  ed9f0a22          VLDR     s0,|L13.188|
000034  ee000a81          VMLA.F32 s0,s1,s2
000038  ed820a00          VSTR     s0,[r2,#0]
                  |L13.60|
00003c  3008              ADDS     r0,r0,#8
                  |L13.62|
00003e  4298              CMP      r0,r3
000040  d1e7              BNE      |L13.18|
;;;79         }
;;;80       }
;;;81       
;;;82       shdn_set();
000042  4638              MOV      r0,r7
000044  f7fffffe          BL       _ZN8T_AD84028shdn_setEv ; T_AD8402::shdn_set()
;;;83       latch_clr();
000048  4638              MOV      r0,r7
00004a  f7fffffe          BL       _ZN8T_AD84029latch_clrEv ; T_AD8402::latch_clr()
;;;84       
;;;85       uint8_t Ctr = DATA_WORD_SIZE;
00004e  260a              MOVS     r6,#0xa
;;;86       //----- проталкивание адреса (номера канала) - реверс уже сделан (TIMING DIAGRAMS, datasheet Rev.E, Page 10)
;;;87       uint8_t Data = static_cast<uint8_t>( Chn );
000050  9500              STR      r5,[sp,#0]
;;;88       while ( Ctr--> 8U )
000052  e009              B        |L13.104|
                  |L13.84|
;;;89       {
;;;90         data_bit_ctrl( &Data );
000054  4669              MOV      r1,sp
000056  4638              MOV      r0,r7
000058  f7fffffe          BL       _ZN8T_AD840213data_bit_ctrlEPh ; T_AD8402::data_bit_ctrl(unsigned char*)
;;;91         clk_clr();
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       _ZN8T_AD84027clk_clrEv ; T_AD8402::clk_clr()
;;;92         clk_set();
000062  4638              MOV      r0,r7
000064  f7fffffe          BL       _ZN8T_AD84027clk_setEv ; T_AD8402::clk_set()
                  |L13.104|
000068  4630              MOV      r0,r6                 ;88
00006a  1e71              SUBS     r1,r6,#1              ;88
00006c  b2ce              UXTB     r6,r1                 ;88
00006e  2808              CMP      r0,#8                 ;88
000070  d8f0              BHI      |L13.84|
;;;93       }
;;;94       
;;;95       //----- проталкивание данных
;;;96       Data = reverse_bits( Code );
000072  4621              MOV      r1,r4
000074  4638              MOV      r0,r7
000076  f7fffffe          BL       _ZN8T_AD840212reverse_bitsEh ; T_AD8402::reverse_bits(unsigned char)
00007a  9000              STR      r0,[sp,#0]
;;;97       
;;;98     //  ++Ctr;
;;;99       
;;;100      do
00007c  bf00              NOP      
                  |L13.126|
;;;101      {
;;;102        data_bit_ctrl( &Data );
00007e  4669              MOV      r1,sp
000080  4638              MOV      r0,r7
000082  f7fffffe          BL       _ZN8T_AD840213data_bit_ctrlEPh ; T_AD8402::data_bit_ctrl(unsigned char*)
;;;103        clk_clr();
000086  4638              MOV      r0,r7
000088  f7fffffe          BL       _ZN8T_AD84027clk_clrEv ; T_AD8402::clk_clr()
;;;104        clk_set();
00008c  4638              MOV      r0,r7
00008e  f7fffffe          BL       _ZN8T_AD84027clk_setEv ; T_AD8402::clk_set()
;;;105      } while ( Ctr--> 0U );
000092  1e30              SUBS     r0,r6,#0
000094  f1a60101          SUB      r1,r6,#1
000098  b2ce              UXTB     r6,r1
00009a  d1f0              BNE      |L13.126|
;;;106      
;;;107      sdi_clr(); 
00009c  4638              MOV      r0,r7
00009e  f7fffffe          BL       _ZN8T_AD84027sdi_clrEv ; T_AD8402::sdi_clr()
;;;108      clk_clr();  
0000a2  4638              MOV      r0,r7
0000a4  f7fffffe          BL       _ZN8T_AD84027clk_clrEv ; T_AD8402::clk_clr()
;;;109      latch_set();
0000a8  4638              MOV      r0,r7
0000aa  f7fffffe          BL       _ZN8T_AD84029latch_setEv ; T_AD8402::latch_set()
;;;110    }
0000ae  bdf8              POP      {r3-r7,pc}
;;;111    
                          ENDP

                  |L13.176|
                          DCD      _ZN8T_AD84026ResistE ; T_AD8402::Resist
                  |L13.180|
0000b4  43800000          DCFS     0x43800000 ; 256
                  |L13.184|
0000b8  47c35000          DCFS     0x47c35000 ; 100000
                  |L13.188|
0000bc  42480000          DCFS     0x42480000 ; 50

                          AREA ||i._ZN8T_AD84028shdn_clrEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84028shdn_clrEv PROC ; T_AD8402::shdn_clr()
;;;183    
;;;184    void T_AD8402::shdn_clr()
000000  b510              PUSH     {r4,lr}
;;;185    {
000002  4604              MOV      r4,r0
;;;186      LL_GPIO_ResetOutputPin( HW.SHDN.Gpio, HW.SHDN.Nbr );
000004  e9d40105          LDRD     r0,r1,[r4,#0x14]
000008  f7fffffe          BL       _ZN30_INTERNAL_10_AD8402_cpp_AD840222LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj ; [local to AD8402_cpp]::LL_GPIO_ResetOutputPin(GPIO_TypeDef*, unsigned)
;;;187    }
00000c  bd10              POP      {r4,pc}
;;;188    
                          ENDP


                          AREA ||i._ZN8T_AD84028shdn_setEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84028shdn_setEv PROC ; T_AD8402::shdn_set()
;;;158    
;;;159    void T_AD8402::shdn_set()
000000  b510              PUSH     {r4,lr}
;;;160    {
000002  4604              MOV      r4,r0
;;;161      LL_GPIO_SetOutputPin( HW.SHDN.Gpio, HW.SHDN.Nbr );
000004  e9d40105          LDRD     r0,r1,[r4,#0x14]
000008  f7fffffe          BL       _ZN30_INTERNAL_10_AD8402_cpp_AD840220LL_GPIO_SetOutputPinEP12GPIO_TypeDefj ; [local to AD8402_cpp]::LL_GPIO_SetOutputPin(GPIO_TypeDef*, unsigned)
;;;162    }
00000c  bd10              POP      {r4,pc}
;;;163    
                          ENDP


                          AREA ||i._ZN8T_AD84029latch_clrEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84029latch_clrEv PROC ; T_AD8402::latch_clr()
;;;178    
;;;179    void T_AD8402::latch_clr()
000000  b510              PUSH     {r4,lr}
;;;180    {
000002  4604              MOV      r4,r0
;;;181      LL_GPIO_ResetOutputPin( HW.CS.Gpio, HW.CS.Nbr );
000004  e9d40100          LDRD     r0,r1,[r4,#0]
000008  f7fffffe          BL       _ZN30_INTERNAL_10_AD8402_cpp_AD840222LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj ; [local to AD8402_cpp]::LL_GPIO_ResetOutputPin(GPIO_TypeDef*, unsigned)
;;;182    }
00000c  bd10              POP      {r4,pc}
;;;183    
                          ENDP


                          AREA ||i._ZN8T_AD84029latch_setEv||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD84029latch_setEv PROC ; T_AD8402::latch_set()
;;;153    
;;;154    void T_AD8402::latch_set()
000000  b510              PUSH     {r4,lr}
;;;155    {
000002  4604              MOV      r4,r0
;;;156      LL_GPIO_SetOutputPin( HW.CS.Gpio, HW.CS.Nbr );
000004  e9d40100          LDRD     r0,r1,[r4,#0]
000008  f7fffffe          BL       _ZN30_INTERNAL_10_AD8402_cpp_AD840220LL_GPIO_SetOutputPinEP12GPIO_TypeDefj ; [local to AD8402_cpp]::LL_GPIO_SetOutputPin(GPIO_TypeDef*, unsigned)
;;;157    }
00000c  bd10              POP      {r4,pc}
;;;158    
                          ENDP


                          AREA ||i._ZN8T_AD8402C1ERK7TPot_HW||, CODE, READONLY, ALIGN=2

                  _ZN8T_AD8402C2ERK7TPot_HW                  ; Alternate entry point ; T_AD8402::T_AD8402__sub_object(const TPot_HW&)
                  _ZN8T_AD8402C1ERK7TPot_HW PROC ; T_AD8402::T_AD8402(const TPot_HW&)
;;;12     
;;;13     T_AD8402::T_AD8402( const TPot_HW &Pot_HW )
;;;14     :
;;;15     HW( Pot_HW ),
;;;16     Rwb( 0.f )
;;;17     {
;;;18     
;;;19     }
;;;20     
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  2264              MOVS     r2,#0x64
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       __aeabi_memcpy4
000010  ed9f0a02          VLDR     s0,|L18.28|
000014  ed840a19          VSTR     s0,[r4,#0x64]
000018  4620              MOV      r0,r4
00001a  bd70              POP      {r4-r6,pc}
                          ENDP

                  |L18.28|
00001c  00000000          DCFS     0x00000000 ; 0

                          AREA ||i._ZN8T_AD8402D1Ev||, CODE, READONLY, ALIGN=1

                  _ZN8T_AD8402D2Ev                  ; Alternate entry point ; T_AD8402::~T_AD8402__sub_object()
                  _ZN8T_AD8402D1Ev PROC ; T_AD8402::~T_AD8402()
;;;20     
;;;21     T_AD8402::~T_AD8402()
;;;22     {
;;;23     	
;;;24     }
;;;25     
000000  4770              BX       lr
                          ENDP


                          AREA ||i.__sti___10_AD8402_cpp_AD8402||, CODE, READONLY, ALIGN=2

                  __sti___10_AD8402_cpp_AD8402 PROC
000000  b510              PUSH     {r4,lr}
000002  4905              LDR      r1,|L20.24|
000004  4805              LDR      r0,|L20.28|
000006  f7fffffe          BL       _ZN8T_AD8402C1ERK7TPot_HW ; T_AD8402::T_AD8402(const TPot_HW&)
00000a  4604              MOV      r4,r0
00000c  4a04              LDR      r2,|L20.32|
00000e  4905              LDR      r1,|L20.36|
000010  f7fffffe          BL       __aeabi_atexit
000014  bd10              POP      {r4,pc}
                          ENDP

000016  0000              DCW      0x0000
                  |L20.24|
                          DCD      Pot_HW
                  |L20.28|
                          DCD      AD8402
                  |L20.32|
                          DCD      __dso_handle
                  |L20.36|
                          DCD      _ZN8T_AD8402D1Ev ; T_AD8402::~T_AD8402()

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN8T_AD8402C1ERK7TPot_HW||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD8402C1ERK7TPot_HW||
                          DCD      0x00000001

                          AREA ||area_number.22||, LINKORDER=||i._ZN8T_AD8402D1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.22||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD8402D1Ev||
                          DCD      0x00000001

                          AREA ||area_number.23||, LINKORDER=||i._ZN8T_AD84027sdi_clrEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.23||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84027sdi_clrEv||
                          DCD      0x00000001

                          AREA ||area_number.24||, LINKORDER=||i._ZN8T_AD84027clk_clrEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.24||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84027clk_clrEv||
                          DCD      0x00000001

                          AREA ||area_number.25||, LINKORDER=||i._ZN8T_AD84026rs_setEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.25||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84026rs_setEv||
                          DCD      0x00000001

                          AREA ||area_number.26||, LINKORDER=||i._ZN8T_AD84028shdn_clrEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.26||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84028shdn_clrEv||
                          DCD      0x00000001

                          AREA ||area_number.27||, LINKORDER=||i._ZN8T_AD84029latch_setEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.27||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84029latch_setEv||
                          DCD      0x00000001

                          AREA ||area_number.28||, LINKORDER=||i._ZN8T_AD84024initEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.28||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84024initEv||
                          DCD      0x00000001

                          AREA ||area_number.29||, LINKORDER=||i._ZN8T_AD84027clk_setEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.29||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84027clk_setEv||
                          DCD      0x00000001

                          AREA ||area_number.30||, LINKORDER=||i._ZN8T_AD840213data_bit_ctrlEPh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.30||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD840213data_bit_ctrlEPh||
                          DCD      0x00000001

                          AREA ||area_number.31||, LINKORDER=||i._ZN8T_AD840212reverse_bitsEh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.31||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD840212reverse_bitsEh||
                          DCD      0x00000001

                          AREA ||area_number.32||, LINKORDER=||i._ZN8T_AD84029latch_clrEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.32||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84029latch_clrEv||
                          DCD      0x00000001

                          AREA ||area_number.33||, LINKORDER=||i._ZN8T_AD84028shdn_setEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.33||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84028shdn_setEv||
                          DCD      0x00000001

                          AREA ||area_number.34||, LINKORDER=||i._ZN8T_AD84028set_codeEhNS_8TChannelE||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.34||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84028set_codeEhNS_8TChannelE||
                          DCD      0x00000001

                          AREA ||area_number.35||, LINKORDER=||i._ZN8T_AD840210get_resistENS_8TChannelE||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.35||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD840210get_resistENS_8TChannelE||
                          DCD      0x00000001

                          AREA ||area_number.36||, LINKORDER=||i._ZN8T_AD84027sdi_setEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.36||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84027sdi_setEv||
                          DCD      0x00000001

                          AREA ||area_number.37||, LINKORDER=||i._ZN8T_AD84026rs_clrEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.37||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN8T_AD84026rs_clrEv||
                          DCD      0x00000001

                          AREA ||area_number.38||, LINKORDER=||i.__sti___10_AD8402_cpp_AD8402||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.38||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__sti___10_AD8402_cpp_AD8402||
                          DCD      0x00000001

                          AREA ||area_number.39||, LINKORDER=||i._ZN30_INTERNAL_10_AD8402_cpp_AD840220LL_GPIO_SetOutputPinEP12GPIO_TypeDefj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.39||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN30_INTERNAL_10_AD8402_cpp_AD840220LL_GPIO_SetOutputPinEP12GPIO_TypeDefj||
                          DCD      0x00000001

                          AREA ||area_number.40||, LINKORDER=||i._ZN30_INTERNAL_10_AD8402_cpp_AD840222LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.40||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN30_INTERNAL_10_AD8402_cpp_AD840222LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  AD8402
                          %        104

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  00000201          DCB      0x00,0x00,0x02,0x01
                          DCD      _ZN8T_AD84027sdi_setEv ; T_AD8402::sdi_set()
                          DCD      0x00000000
00000c  01000000          DCB      0x01,0x00,0x00,0x00
                          DCD      _ZN8T_AD84027sdi_clrEv ; T_AD8402::sdi_clr()
                          DCD      0x00000000
000018  00000000          DCB      0x00,0x00,0x00,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  _ZN8T_AD84026ResistE ; T_AD8402::Resist
000000  00000000          DCFS     0x00000000 ; 0
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  00000000          DCFS     0x00000000 ; 0
00000c  02000000          DCB      0x02,0x00,0x00,0x00

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___10_AD8402_cpp_AD8402

;*** Start embedded assembler ***

#line 1 "Source\\Ext_Dev\\src\\AD8402.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_AD8402_cpp_AD8402___ZN30_INTERNAL_10_AD8402_cpp_AD84027__REV16Ej|
#line 388 ".\\Source\\Core\\inc\\cmsis_armcc.h"
|__asm___10_AD8402_cpp_AD8402___ZN30_INTERNAL_10_AD8402_cpp_AD84027__REV16Ej| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_AD8402_cpp_AD8402___ZN30_INTERNAL_10_AD8402_cpp_AD84027__REVSHEi|
#line 402
|__asm___10_AD8402_cpp_AD8402___ZN30_INTERNAL_10_AD8402_cpp_AD84027__REVSHEi| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_AD8402_cpp_AD8402___ZN30_INTERNAL_10_AD8402_cpp_AD84025__RRXEj|
#line 587
|__asm___10_AD8402_cpp_AD8402___ZN30_INTERNAL_10_AD8402_cpp_AD84025__RRXEj| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
