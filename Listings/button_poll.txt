; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o.\objects\button_poll.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\button_poll.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I"..\Lib\CRC Modbus\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I..\Lib\Objects -I.\Source\Ext_Dev\inc\AT45 -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\button_poll.crf Source\Tasks\src\button_poll.cpp]
                          THUMB

                          AREA ||i._Z11vPushButtonPv||, CODE, READONLY, ALIGN=2

                  _Z11vPushButtonPv PROC ; vPushButton(void*)
;;;11     //----- Задача RTOS -------------------------------------------------------------------------------------------------
;;;12     void vPushButton( void *pvParameters )
000000  b51f              PUSH     {r0-r4,lr}
;;;13     {
;;;14       Btn.init();
000002  482e              LDR      r0,|L1.188|
000004  f7fffffe          BL       _ZN7TButton4initEv ; TButton::init()
;;;15     //  Test.init();
;;;16     
;;;17       xTimerStart( BtnTimer, 0U );
000008  f7fffffe          BL       xTaskGetTickCount
00000c  4602              MOV      r2,r0
00000e  2000              MOVS     r0,#0
000010  4603              MOV      r3,r0
000012  2101              MOVS     r1,#1
000014  9000              STR      r0,[sp,#0]
000016  482a              LDR      r0,|L1.192|
000018  6800              LDR      r0,[r0,#0]  ; BtnTimer
00001a  f7fffffe          BL       xTimerGenericCommand
;;;18       
;;;19     	struct TBtnHandler
;;;20     	{
;;;21     	  uint16_t          Ctr;
;;;22     		TSettings::TPress HoldType;
;;;23     		TSettings::TPress PressType;
;;;24     	};
;;;25       
;;;26     	constexpr TBtnHandler BtnHandler[] =
00001e  4829              LDR      r0,|L1.196|
000020  6800              LDR      r0,[r0,#0]  ; <Data1>
000022  9003              STR      r0,[sp,#0xc]
;;;27     	{
;;;28     	  { TZ_Const::__ANY_PRESS_CTR,  TSettings::TPress::__START_HOLD             , TSettings::TPress::__RELEASE_LESS_1_SEC },   //прошел антидребезг, но нажатие+отпускание < 1 сек
;;;29     //	  { TZ_Const::__1_PRESS_CTR,    TSettings::TPress::__HOLD_EQ_OR_MORE_1_SEC  , TSettings::TPress::__RELEASE_LESS_3_5_SEC }, //прошел антидребезг, но нажатие+отпускание < 1 сек
;;;30     //	  { TZ_Const::__3_5_PRESS_CTR,  TSettings::TPress::__HOLD_EQ_OR_MORE_3_5_SEC, TSettings::TPress::__RELEASE_MORE_3_5_SEC },
;;;31     	};
;;;32     
;;;33     	auto beg = &BtnHandler[0];
000024  ad03              ADD      r5,sp,#0xc
;;;34     	auto end = &BtnHandler[ sizeof BtnHandler / sizeof BtnHandler[0] ];
000026  ae04              ADD      r6,sp,#0x10
;;;35     
;;;36     //  Test.off();
;;;37     
;;;38     	for ( ;; )
000028  bf00              NOP      
                  |L1.42|
;;;39     	{
;;;40         xSemaphoreTake( BtnTimer_TrigSem, portMAX_DELAY );
00002a  2300              MOVS     r3,#0
00002c  1e5a              SUBS     r2,r3,#1
00002e  4619              MOV      r1,r3
000030  4825              LDR      r0,|L1.200|
000032  6800              LDR      r0,[r0,#0]  ; BtnTimer_TrigSem
000034  f7fffffe          BL       xQueueGenericReceive
;;;41     		  if ( Btn.read() == TButton::TState::__PRESSED )
000038  4820              LDR      r0,|L1.188|
00003a  f7fffffe          BL       _ZNK7TButton4readEv ; TButton::read() const
00003e  bb08              CBNZ     r0,|L1.132|
;;;42     			{
;;;43     			  ++Btn.SampleCtr;
000040  481e              LDR      r0,|L1.188|
000042  e9d01000          LDRD     r1,r0,[r0,#0]
000046  1c49              ADDS     r1,r1,#1
000048  f1400000          ADC      r0,r0,#0
00004c  4a1b              LDR      r2,|L1.188|
00004e  e9c21000          STRD     r1,r0,[r2,#0]
;;;44             std::for_each( beg, end, []( TBtnHandler item ){
000052  462c              MOV      r4,r5
000054  4637              MOV      r7,r6
000056  e011              B        |L1.124|
                  |L1.88|
000058  6820              LDR      r0,[r4,#0]
00005a  9000              STR      r0,[sp,#0]
;;;45     				  if ( 
00005c  f8bd0000          LDRH     r0,[sp,#0]
000060  2100              MOVS     r1,#0
000062  4a16              LDR      r2,|L1.188|
000064  e9d23200          LDRD     r3,r2,[r2,#0]
000068  1ac0              SUBS     r0,r0,r3
00006a  4191              SBCS     r1,r1,r2
00006c  d204              BCS      |L1.120|
;;;46     					    Btn.SampleCtr > item.Ctr
;;;47     						 )
;;;48     					{
;;;49                 Model.set_btn_mode( item.HoldType );
00006e  f89d1002          LDRB     r1,[sp,#2]
000072  4816              LDR      r0,|L1.204|
000074  f7fffffe          BL       _ZN6TModel12set_btn_modeEN9TSettings6TPressE ; TModel::set_btn_mode(TSettings::TPress)
                  |L1.120|
;;;50     					}
;;;51     				} );
000078  bf00              NOP      
00007a  1d24              ADDS     r4,r4,#4
                  |L1.124|
00007c  42bc              CMP      r4,r7
00007e  d1eb              BNE      |L1.88|
000080  bf00              NOP      
;;;52     			}
000082  e7d2              B        |L1.42|
                  |L1.132|
;;;53     			else
;;;54     			{        
;;;55             std::for_each( beg, end, []( TBtnHandler item ){
000084  462c              MOV      r4,r5
000086  4637              MOV      r7,r6
000088  e010              B        |L1.172|
                  |L1.138|
00008a  6820              LDR      r0,[r4,#0]
00008c  9000              STR      r0,[sp,#0]
;;;56     				  if ( Model.get_btn_mode() == item.HoldType )
00008e  480f              LDR      r0,|L1.204|
000090  f7fffffe          BL       _ZN6TModel12get_btn_modeEv ; TModel::get_btn_mode()
000094  f89d1002          LDRB     r1,[sp,#2]
000098  4288              CMP      r0,r1
00009a  d105              BNE      |L1.168|
;;;57     					{					  
;;;58                 Model.set_btn_mode( item.PressType );
00009c  f89d1003          LDRB     r1,[sp,#3]
0000a0  480a              LDR      r0,|L1.204|
0000a2  f7fffffe          BL       _ZN6TModel12set_btn_modeEN9TSettings6TPressE ; TModel::set_btn_mode(TSettings::TPress)
;;;59                 return ;
0000a6  e000              B        |L1.170|
                  |L1.168|
;;;60     					}
;;;61     				} );
0000a8  bf00              NOP      
                  |L1.170|
0000aa  1d24              ADDS     r4,r4,#4
                  |L1.172|
0000ac  42bc              CMP      r4,r7
0000ae  d1ec              BNE      |L1.138|
0000b0  bf00              NOP      
;;;62             
;;;63     			  Btn.SampleCtr = 0U;
0000b2  2100              MOVS     r1,#0
0000b4  4a01              LDR      r2,|L1.188|
0000b6  6011              STR      r1,[r2,#0]  ; Btn
0000b8  6051              STR      r1,[r2,#4]  ; Btn
;;;64     			}
0000ba  e7b6              B        |L1.42|
;;;65     	}
;;;66     }
;;;67     //-------------------------------------------------------------------------------------------------------------------
                          ENDP

                  |L1.188|
                          DCD      Btn
                  |L1.192|
                          DCD      BtnTimer
                  |L1.196|
                          DCD      ||.constdata||
                  |L1.200|
                          DCD      BtnTimer_TrigSem
                  |L1.204|
                          DCD      Model

                          AREA ||i._Z14vTimerCallbackPv||, CODE, READONLY, ALIGN=2

                  _Z14vTimerCallbackPv PROC ; vTimerCallback(void*)
;;;68     
;;;69     void vTimerCallback(TimerHandle_t xTimer)
000000  b510              PUSH     {r4,lr}
;;;70     {
000002  4604              MOV      r4,r0
;;;71       xSemaphoreGive( BtnTimer_TrigSem ); //отправить семафор - таймер сработал
000004  2300              MOVS     r3,#0
000006  461a              MOV      r2,r3
000008  4619              MOV      r1,r3
00000a  4806              LDR      r0,|L2.36|
00000c  6800              LDR      r0,[r0,#0]  ; BtnTimer_TrigSem
00000e  f7fffffe          BL       xQueueGenericSend
;;;72       xSemaphoreGive( LedTimer_TrigSem ); //отправить семафор - таймер сработал
000012  2300              MOVS     r3,#0
000014  461a              MOV      r2,r3
000016  4619              MOV      r1,r3
000018  4803              LDR      r0,|L2.40|
00001a  6800              LDR      r0,[r0,#0]  ; LedTimer_TrigSem
00001c  f7fffffe          BL       xQueueGenericSend
;;;73     }
000020  bd10              POP      {r4,pc}
;;;74     
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      BtnTimer_TrigSem
                  |L2.40|
                          DCD      LedTimer_TrigSem

                          AREA ||.ARM.exidx||, LINKORDER=||i._Z11vPushButtonPv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._Z11vPushButtonPv||
                          DCD      0x00000001

                          AREA ||area_number.4||, LINKORDER=||i._Z14vTimerCallbackPv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z14vTimerCallbackPv||
                          DCD      0x00000001

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  000a              DCW      0x000a
000002  0104              DCB      0x01,0x04

;*** Start embedded assembler ***

#line 1 "Source\\Tasks\\src\\button_poll.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_button_poll_cpp_02173277___ZN37_INTERNAL_15_button_poll_cpp_021732777__REV16Ej|
#line 388 ".\\Source\\Core\\inc\\cmsis_armcc.h"
|__asm___15_button_poll_cpp_02173277___ZN37_INTERNAL_15_button_poll_cpp_021732777__REV16Ej| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_button_poll_cpp_02173277___ZN37_INTERNAL_15_button_poll_cpp_021732777__REVSHEi|
#line 402
|__asm___15_button_poll_cpp_02173277___ZN37_INTERNAL_15_button_poll_cpp_021732777__REVSHEi| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_button_poll_cpp_02173277___ZN37_INTERNAL_15_button_poll_cpp_021732775__RRXEj|
#line 587
|__asm___15_button_poll_cpp_02173277___ZN37_INTERNAL_15_button_poll_cpp_021732775__RRXEj| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
