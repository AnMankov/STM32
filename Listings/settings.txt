; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o.\objects\settings.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\settings.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I.\Source\Ext_Dev\inc\AT45 -I.\Objects -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\settings.crf Source\Tasks\src\settings.cpp]
                          THUMB

                          AREA ||i._ZN9TSettings7chk_devER10MySettings||, CODE, READONLY, ALIGN=2

                  _ZN9TSettings7chk_devER10MySettings PROC ; TSettings::chk_dev(MySettings&)
;;;80     
;;;81     void TSettings::chk_dev( MySettings &New )
000000  b570              PUSH     {r4-r6,lr}
;;;82     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;83       New.DevSets.Thr = ( chk_param( __THR, New.DevSets.Thr ) )
000006  7a62              LDRB     r2,[r4,#9]
000008  4629              MOV      r1,r5
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       _ZNK9TSettings9chk_paramIhEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<unsigned char>(const TSettings::TRange&, T1) const
000010  b138              CBZ      r0,|L1.34|
;;;84                         ? Model.get_thr()                             //восстановить предыдущее значение настройки
000012  4832              LDR      r0,|L1.220|
000014  f7fffffe          BL       _ZN6TModel7get_thrEv ; TModel::get_thr()
000018  ee000a10          VMOV     s0,r0
00001c  eeb80a40          VCVT.F32.U32 s0,s0
000020  e008              B        |L1.52|
                  |L1.34|
;;;85                         : roundf( New.DevSets.Thr );                  //округлить новое значение
000022  7a60              LDRB     r0,[r4,#9]
000024  ee000a90          VMOV     s1,r0
000028  eef80a60          VCVT.F32.U32 s1,s1
00002c  eeb00a60          VMOV.F32 s0,s1
000030  f7fffffe          BL       __hardfp_roundf
                  |L1.52|
000034  eebc0ac0          VCVT.U32.F32 s0,s0
000038  ee100a10          VMOV     r0,s0
00003c  7260              STRB     r0,[r4,#9]
;;;86     
;;;87       New.DevSets.Hyst = ( chk_param( __HYST, New.DevSets.Hyst ) )
00003e  7aa2              LDRB     r2,[r4,#0xa]
000040  1d29              ADDS     r1,r5,#4
000042  4628              MOV      r0,r5
000044  f7fffffe          BL       _ZNK9TSettings9chk_paramIhEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<unsigned char>(const TSettings::TRange&, T1) const
000048  b138              CBZ      r0,|L1.90|
;;;88                          ? Model.get_hyst()                           //восстановить предыдущее значение настройки
00004a  4824              LDR      r0,|L1.220|
00004c  f7fffffe          BL       _ZN6TModel8get_hystEv ; TModel::get_hyst()
000050  ee000a10          VMOV     s0,r0
000054  eeb80a40          VCVT.F32.U32 s0,s0
000058  e008              B        |L1.108|
                  |L1.90|
;;;89                          : roundf( New.DevSets.Hyst );                //округлить новое значение
00005a  7aa0              LDRB     r0,[r4,#0xa]
00005c  ee000a90          VMOV     s1,r0
000060  eef80a60          VCVT.F32.U32 s1,s1
000064  eeb00a60          VMOV.F32 s0,s1
000068  f7fffffe          BL       __hardfp_roundf
                  |L1.108|
00006c  eebc0ac0          VCVT.U32.F32 s0,s0
000070  ee100a10          VMOV     r0,s0
000074  72a0              STRB     r0,[r4,#0xa]
;;;90     
;;;91       //дополнительная проверка для гистерезиса
;;;92       if ( New.DevSets.Thr - New.DevSets.Hyst < __LOW_DIF )        //если значение для возвата в состояние "закрыта" меньше минимального, ...
000076  7a61              LDRB     r1,[r4,#9]
000078  7aa0              LDRB     r0,[r4,#0xa]
00007a  1a08              SUBS     r0,r1,r0
00007c  f9b51018          LDRSH    r1,[r5,#0x18]
000080  4288              CMP      r0,r1
000082  da03              BGE      |L1.140|
;;;93       {                                                               
;;;94         New.DevSets.Hyst = New.DevSets.Thr - __LOW_DIF;            //...то установить максимально допустимое значение гистерезиса для данного порога
000084  7a60              LDRB     r0,[r4,#9]
000086  7e29              LDRB     r1,[r5,#0x18]
000088  1a40              SUBS     r0,r0,r1
00008a  72a0              STRB     r0,[r4,#0xa]
                  |L1.140|
;;;95       }
;;;96     
;;;97       New.DevSets.Bias = ( chk_param( __BIAS, New.DevSets.Bias ) )
00008c  f994000b          LDRSB    r0,[r4,#0xb]
000090  f9b51008          LDRSH    r1,[r5,#8]
000094  4281              CMP      r1,r0
000096  dc05              BGT      |L1.164|
000098  f9b5100a          LDRSH    r1,[r5,#0xa]
00009c  4281              CMP      r1,r0
00009e  db01              BLT      |L1.164|
0000a0  2101              MOVS     r1,#1
0000a2  e000              B        |L1.166|
                  |L1.164|
0000a4  2100              MOVS     r1,#0
                  |L1.166|
0000a6  b139              CBZ      r1,|L1.184|
;;;98                          ? Model.get_bias()                           //восстановить предыдущее значение настройки
0000a8  480c              LDR      r0,|L1.220|
0000aa  f7fffffe          BL       _ZN6TModel8get_biasEv ; TModel::get_bias()
0000ae  ee000a10          VMOV     s0,r0
0000b2  eeb80ac0          VCVT.F32.S32 s0,s0
0000b6  e009              B        |L1.204|
                  |L1.184|
;;;99                          : roundf( New.DevSets.Bias );                //округлить новое значение
0000b8  f994000b          LDRSB    r0,[r4,#0xb]
0000bc  ee000a90          VMOV     s1,r0
0000c0  eef80ae0          VCVT.F32.S32 s1,s1
0000c4  eeb00a60          VMOV.F32 s0,s1
0000c8  f7fffffe          BL       __hardfp_roundf
                  |L1.204|
0000cc  eebd0ac0          VCVT.S32.F32 s0,s0
0000d0  ee100a10          VMOV     r0,s0
0000d4  b241              SXTB     r1,r0
0000d6  72e1              STRB     r1,[r4,#0xb]
;;;100    }
0000d8  bd70              POP      {r4-r6,pc}
;;;101    
                          ENDP

0000da  0000              DCW      0x0000
                  |L1.220|
                          DCD      Model

                          AREA ||i._ZN9TSettingsC1Ev||, CODE, READONLY, ALIGN=2

                  _ZN9TSettingsC2Ev                  ; Alternate entry point ; TSettings::TSettings__sub_object()
                  _ZN9TSettingsC1Ev PROC ; TSettings::TSettings()
;;;11     
;;;12     TSettings::TSettings()
;;;13     :
;;;14     __THR(               {  15,                                      50 } ),
;;;15     __HYST(              {   5,                                      40 } ),
;;;16     __BIAS(              { -15,                                      15 } ),
;;;17     __AXIS_ROTATE(       { TAxisRotate::__0_DEG, TAxisRotate::__270_DEG } ),
;;;18     __ROLL_BIAS_ANGLE(   {  -7,                                       7 } ),
;;;19     __PITCH_BIAS_ANGLE(  {  -7,                                       7 } ),
;;;20     __LOW_DIF( __THR.Min - __HYST.Min ),
;;;21     __MB_ADDR(           {   1,                                     247 } ),
;;;22     __U_SPEED(           {   0,                                       9 } ),
;;;23     __U_PAR(             {   0,                                       3 } ),
;;;24     //__CALIB(             {   0,                                       5 } ) //для калибровки по первичным данным акселерометра в g
;;;25     __CALIB(             {   0,                                       1 } ), //для калибровки по углу
;;;26     __ACCESS(            { 230,                                     232 } )  //для уровней доступа
;;;27     {
;;;28     
;;;29     }
;;;30     
000000  4915              LDR      r1,|L2.88|
000002  6809              LDR      r1,[r1,#0]  ; <Data1>
000004  6001              STR      r1,[r0,#0]
000006  4915              LDR      r1,|L2.92|
000008  6809              LDR      r1,[r1,#0]  ; <Data2>
00000a  6041              STR      r1,[r0,#4]
00000c  4914              LDR      r1,|L2.96|
00000e  6809              LDR      r1,[r1,#0]  ; <Data3>
000010  6081              STR      r1,[r0,#8]
000012  4914              LDR      r1,|L2.100|
000014  6809              LDR      r1,[r1,#0]  ; <Data4>
000016  60c1              STR      r1,[r0,#0xc]
000018  4913              LDR      r1,|L2.104|
00001a  6809              LDR      r1,[r1,#0]  ; <Data5>
00001c  6101              STR      r1,[r0,#0x10]
00001e  4913              LDR      r1,|L2.108|
000020  6809              LDR      r1,[r1,#0]  ; <Data6>
000022  6141              STR      r1,[r0,#0x14]
000024  8801              LDRH     r1,[r0,#0]
000026  8882              LDRH     r2,[r0,#4]
000028  1a89              SUBS     r1,r1,r2
00002a  b209              SXTH     r1,r1
00002c  8301              STRH     r1,[r0,#0x18]
00002e  4910              LDR      r1,|L2.112|
000030  6809              LDR      r1,[r1,#0]  ; <Data7>
000032  f8c0101a          STR      r1,[r0,#0x1a]
000036  490f              LDR      r1,|L2.116|
000038  6809              LDR      r1,[r1,#0]  ; <Data8>
00003a  f8c0101e          STR      r1,[r0,#0x1e]
00003e  490e              LDR      r1,|L2.120|
000040  6809              LDR      r1,[r1,#0]  ; <Data9>
000042  f8c01022          STR      r1,[r0,#0x22]
000046  490d              LDR      r1,|L2.124|
000048  6809              LDR      r1,[r1,#0]  ; <Data10>
00004a  f8c01026          STR      r1,[r0,#0x26]
00004e  490c              LDR      r1,|L2.128|
000050  6809              LDR      r1,[r1,#0]  ; <Data11>
000052  f8c0102a          STR      r1,[r0,#0x2a]
000056  4770              BX       lr
                          ENDP

                  |L2.88|
                          DCD      ||<Data1>||
                  |L2.92|
                          DCD      ||<Data2>||
                  |L2.96|
                          DCD      ||<Data3>||
                  |L2.100|
                          DCD      ||<Data4>||
                  |L2.104|
                          DCD      ||<Data5>||
                  |L2.108|
                          DCD      ||<Data6>||
                  |L2.112|
                          DCD      ||<Data7>||
                  |L2.116|
                          DCD      ||<Data8>||
                  |L2.120|
                          DCD      ||<Data9>||
                  |L2.124|
                          DCD      ||<Data10>||
                  |L2.128|
                          DCD      ||<Data11>||

                          AREA ||i._ZN9TSettingsD1Ev||, CODE, READONLY, ALIGN=1

                  _ZN9TSettingsD2Ev                  ; Alternate entry point ; TSettings::~TSettings__sub_object()
                  _ZN9TSettingsD1Ev PROC ; TSettings::~TSettings()
;;;30     
;;;31     TSettings::~TSettings()
;;;32     {
;;;33     
;;;34     }
;;;35     
000000  4770              BX       lr
                          ENDP


                          AREA ||i._ZNK9TSettings10chk_accessEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings10chk_accessEs PROC ; TSettings::chk_access(short) const
;;;106    
;;;107    bool TSettings::chk_access( int16_t Param ) const
000000  b570              PUSH     {r4-r6,lr}
;;;108    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;109      return ( chk_param( __ACCESS, Param ) );
000006  4622              MOV      r2,r4
000008  f105012a          ADD      r1,r5,#0x2a
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;110    }
000012  bd70              POP      {r4-r6,pc}
;;;111    
                          ENDP


                          AREA ||i._ZNK9TSettings11chk_mb_addrEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings11chk_mb_addrEs PROC ; TSettings::chk_mb_addr(short) const
;;;65     
;;;66     bool TSettings::chk_mb_addr( int16_t Param ) const   
000000  b570              PUSH     {r4-r6,lr}
;;;67     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;68       return chk_param( __MB_ADDR, Param );
000006  4622              MOV      r2,r4
000008  f105011a          ADD      r1,r5,#0x1a
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;69     }
000012  bd70              POP      {r4-r6,pc}
;;;70     
                          ENDP


                          AREA ||i._ZNK9TSettings15chk_axis_rotateEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings15chk_axis_rotateEs PROC ; TSettings::chk_axis_rotate(short) const
;;;50     
;;;51     bool TSettings::chk_axis_rotate( int16_t Param ) const
000000  b570              PUSH     {r4-r6,lr}
;;;52     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;53       return chk_param( __AXIS_ROTATE, Param );
000006  4622              MOV      r2,r4
000008  f105010c          ADD      r1,r5,#0xc
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;54     }
000012  bd70              POP      {r4-r6,pc}
;;;55     
                          ENDP


                          AREA ||i._ZNK9TSettings15chk_u_baud_rateEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings15chk_u_baud_rateEs PROC ; TSettings::chk_u_baud_rate(short) const
;;;70     
;;;71     bool TSettings::chk_u_baud_rate( int16_t Param ) const  
000000  b570              PUSH     {r4-r6,lr}
;;;72     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;73       return chk_param( __U_SPEED, Param );
000006  4622              MOV      r2,r4
000008  f105011e          ADD      r1,r5,#0x1e
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;74     }
000012  bd70              POP      {r4-r6,pc}
;;;75     
                          ENDP


                          AREA ||i._ZNK9TSettings19chk_roll_bias_angleEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings19chk_roll_bias_angleEs PROC ; TSettings::chk_roll_bias_angle(short) const
;;;55     
;;;56     bool TSettings::chk_roll_bias_angle( int16_t Param ) const
000000  b570              PUSH     {r4-r6,lr}
;;;57     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;58       return chk_param( __ROLL_BIAS_ANGLE, Param );
000006  4622              MOV      r2,r4
000008  f1050110          ADD      r1,r5,#0x10
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;59     }
000012  bd70              POP      {r4-r6,pc}
;;;60     
                          ENDP


                          AREA ||i._ZNK9TSettings20chk_pitch_bias_angleEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings20chk_pitch_bias_angleEs PROC ; TSettings::chk_pitch_bias_angle(short) const
;;;60     
;;;61     bool TSettings::chk_pitch_bias_angle( int16_t Param ) const
000000  b570              PUSH     {r4-r6,lr}
;;;62     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;63       return chk_param( __PITCH_BIAS_ANGLE, Param );
000006  4622              MOV      r2,r4
000008  f1050114          ADD      r1,r5,#0x14
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;64     }
000012  bd70              POP      {r4-r6,pc}
;;;65     
                          ENDP


                          AREA ||i._ZNK9TSettings7chk_thrEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings7chk_thrEs PROC ; TSettings::chk_thr(short) const
;;;35     
;;;36     bool TSettings::chk_thr( int16_t Param ) const
000000  b570              PUSH     {r4-r6,lr}
;;;37     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;38       return chk_param( __THR, Param );
000006  462a              MOV      r2,r5
000008  4621              MOV      r1,r4
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;39     }
000010  bd70              POP      {r4-r6,pc}
;;;40     
                          ENDP


                          AREA ||i._ZNK9TSettings8chk_biasEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings8chk_biasEs PROC ; TSettings::chk_bias(short) const
;;;45     
;;;46     bool TSettings::chk_bias( int16_t Param ) const  
000000  b570              PUSH     {r4-r6,lr}
;;;47     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;48       return chk_param( __BIAS, Param );
000006  4622              MOV      r2,r4
000008  f1050108          ADD      r1,r5,#8
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;49     }
000012  bd70              POP      {r4-r6,pc}
;;;50     
                          ENDP


                          AREA ||i._ZNK9TSettings8chk_hystEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings8chk_hystEs PROC ; TSettings::chk_hyst(short) const
;;;40     
;;;41     bool TSettings::chk_hyst( int16_t Param ) const
000000  b570              PUSH     {r4-r6,lr}
;;;42     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;43       return chk_param( __HYST, Param );
000006  4622              MOV      r2,r4
000008  1d29              ADDS     r1,r5,#4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;44     }
000010  bd70              POP      {r4-r6,pc}
;;;45     
                          ENDP


                          AREA ||i._ZNK9TSettings9chk_calibEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings9chk_calibEs PROC ; TSettings::chk_calib(short) const
;;;101    
;;;102    bool TSettings::chk_calib( int16_t Param ) const
000000  b570              PUSH     {r4-r6,lr}
;;;103    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;104      return ( chk_param( __CALIB, Param ) );
000006  4622              MOV      r2,r4
000008  f1050126          ADD      r1,r5,#0x26
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;105    }
000012  bd70              POP      {r4-r6,pc}
;;;106    
                          ENDP


                          AREA ||i._ZNK9TSettings9chk_u_parEs||, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings9chk_u_parEs PROC ; TSettings::chk_u_par(short) const
;;;75     
;;;76     bool TSettings::chk_u_par( int16_t Param ) const  
000000  b570              PUSH     {r4-r6,lr}
;;;77     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;78       return chk_param( __U_PAR, Param );
000006  4622              MOV      r2,r4
000008  f1050122          ADD      r1,r5,#0x22
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;79     }
000012  bd70              POP      {r4-r6,pc}
;;;80     
                          ENDP


                          AREA ||i.__sti___12_settings_cpp_Settings||, CODE, READONLY, ALIGN=2

                  __sti___12_settings_cpp_Settings PROC
000000  b510              PUSH     {r4,lr}
000002  4804              LDR      r0,|L15.20|
000004  f7fffffe          BL       _ZN9TSettingsC1Ev ; TSettings::TSettings()
000008  4604              MOV      r4,r0
00000a  4a03              LDR      r2,|L15.24|
00000c  4903              LDR      r1,|L15.28|
00000e  f7fffffe          BL       __aeabi_atexit
000012  bd10              POP      {r4,pc}
                          ENDP

                  |L15.20|
                          DCD      Settings
                  |L15.24|
                          DCD      __dso_handle
                  |L15.28|
                          DCD      _ZN9TSettingsD1Ev ; TSettings::~TSettings()

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN9TSettingsC1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN9TSettingsC1Ev||
                          DCD      0x00000001

                          AREA ||area_number.17||, LINKORDER=||i._ZN9TSettingsD1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9TSettingsD1Ev||
                          DCD      0x00000001

                          AREA ||area_number.18||, LINKORDER=||i._ZN9TSettings7chk_devER10MySettings||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.18||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9TSettings7chk_devER10MySettings||
                          DCD      0x00000001

                          AREA ||area_number.19||, LINKORDER=||i._ZNK9TSettings7chk_thrEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings7chk_thrEs||
                          DCD      0x00000001

                          AREA ||area_number.20||, LINKORDER=||i._ZNK9TSettings8chk_hystEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.20||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings8chk_hystEs||
                          DCD      0x00000001

                          AREA ||area_number.21||, LINKORDER=||i._ZNK9TSettings8chk_biasEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings8chk_biasEs||
                          DCD      0x00000001

                          AREA ||area_number.22||, LINKORDER=||i._ZNK9TSettings15chk_axis_rotateEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.22||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings15chk_axis_rotateEs||
                          DCD      0x00000001

                          AREA ||area_number.23||, LINKORDER=||i._ZNK9TSettings19chk_roll_bias_angleEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.23||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings19chk_roll_bias_angleEs||
                          DCD      0x00000001

                          AREA ||area_number.24||, LINKORDER=||i._ZNK9TSettings20chk_pitch_bias_angleEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.24||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings20chk_pitch_bias_angleEs||
                          DCD      0x00000001

                          AREA ||area_number.25||, LINKORDER=||i._ZNK9TSettings11chk_mb_addrEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.25||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings11chk_mb_addrEs||
                          DCD      0x00000001

                          AREA ||area_number.26||, LINKORDER=||i._ZNK9TSettings15chk_u_baud_rateEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.26||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings15chk_u_baud_rateEs||
                          DCD      0x00000001

                          AREA ||area_number.27||, LINKORDER=||i._ZNK9TSettings9chk_u_parEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.27||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings9chk_u_parEs||
                          DCD      0x00000001

                          AREA ||area_number.28||, LINKORDER=||i._ZNK9TSettings9chk_calibEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.28||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings9chk_calibEs||
                          DCD      0x00000001

                          AREA ||area_number.29||, LINKORDER=||i._ZNK9TSettings10chk_accessEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.29||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9TSettings10chk_accessEs||
                          DCD      0x00000001

                          AREA ||area_number.30||, LINKORDER=||i.__sti___12_settings_cpp_Settings||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.30||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__sti___12_settings_cpp_Settings||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  Settings
                          %        46

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  ||<Data1>||
000000  000f0032          DCW      0x000f,0x0032
                  ||<Data2>||
000004  00050028          DCW      0x0005,0x0028
                  ||<Data3>||
000008  fff1000f          DCW      0xfff1,0x000f
                  ||<Data4>||
00000c  00000003          DCW      0x0000,0x0003
                  ||<Data5>||
000010  fff90007          DCW      0xfff9,0x0007
                  ||<Data6>||
000014  fff90007          DCW      0xfff9,0x0007
                  ||<Data7>||
000018  000100f7          DCW      0x0001,0x00f7
                  ||<Data8>||
00001c  00000009          DCW      0x0000,0x0009
                  ||<Data9>||
000020  00000003          DCW      0x0000,0x0003
                  ||<Data10>||
000024  00000001          DCW      0x0000,0x0001
                  ||<Data11>||
000028  00e600e8          DCW      0x00e6,0x00e8

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___12_settings_cpp_Settings

                          AREA ||t._ZNK9TSettings9chk_paramIhEEbRKNS_6TRangeET_||, COMGROUP=_ZNK9TSettings9chk_paramIhEEbRKNS_6TRangeET_, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings9chk_paramIhEEbRKNS_6TRangeET_ PROC ; bool TSettings::chk_param<unsigned char>(const TSettings::TRange&, T1) const
;;;275      template< typename T >
;;;276      bool chk_param( const TRange &Range, T Param ) const //true => параметр находится в указанном диапазоне
000000  4603              MOV      r3,r0
;;;277      {
;;;278        return (
000002  f9b10000          LDRSH    r0,[r1,#0]
000006  4290              CMP      r0,r2
000008  dc05              BGT      |L99.22|
;;;279                Param >= Range.Min
;;;280                &&
;;;281                Param <= Range.Max
00000a  f9b10002          LDRSH    r0,[r1,#2]
00000e  4290              CMP      r0,r2
000010  db01              BLT      |L99.22|
000012  2001              MOVS     r0,#1                 ;278
                  |L99.20|
;;;282               );
;;;283      }
000014  4770              BX       lr
                  |L99.22|
000016  2000              MOVS     r0,#0                 ;278
000018  e7fc              B        |L99.20|
;;;284    
                          ENDP


                          AREA ||area_number.100||, COMGROUP=_ZNK9TSettings9chk_paramIhEEbRKNS_6TRangeET_, LINKORDER=||t._ZNK9TSettings9chk_paramIhEEbRKNS_6TRangeET_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.100||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZNK9TSettings9chk_paramIhEEbRKNS_6TRangeET_||
                          DCD      0x00000001

                          AREA ||t._ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_||, COMGROUP=_ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_, CODE, READONLY, ALIGN=1

                  _ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_ PROC ; bool TSettings::chk_param<short>(const TSettings::TRange&, T1) const
;;;275      template< typename T >
;;;276      bool chk_param( const TRange &Range, T Param ) const //true => параметр находится в указанном диапазоне
000000  4603              MOV      r3,r0
;;;277      {
;;;278        return (
000002  f9b10000          LDRSH    r0,[r1,#0]
000006  4290              CMP      r0,r2
000008  dc05              BGT      |L106.22|
;;;279                Param >= Range.Min
;;;280                &&
;;;281                Param <= Range.Max
00000a  f9b10002          LDRSH    r0,[r1,#2]
00000e  4290              CMP      r0,r2
000010  db01              BLT      |L106.22|
000012  2001              MOVS     r0,#1                 ;278
                  |L106.20|
;;;282               );
;;;283      }
000014  4770              BX       lr
                  |L106.22|
000016  2000              MOVS     r0,#0                 ;278
000018  e7fc              B        |L106.20|
;;;284    
                          ENDP


                          AREA ||area_number.107||, COMGROUP=_ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_, LINKORDER=||t._ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.107||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZNK9TSettings9chk_paramIsEEbRKNS_6TRangeET_||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "Source\\Tasks\\src\\settings.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_settings_cpp_Settings___ZN34_INTERNAL_12_settings_cpp_Settings7__REV16Ej|
#line 388 ".\\Source\\Core\\inc\\cmsis_armcc.h"
|__asm___12_settings_cpp_Settings___ZN34_INTERNAL_12_settings_cpp_Settings7__REV16Ej| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_settings_cpp_Settings___ZN34_INTERNAL_12_settings_cpp_Settings7__REVSHEi|
#line 402
|__asm___12_settings_cpp_Settings___ZN34_INTERNAL_12_settings_cpp_Settings7__REVSHEi| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_settings_cpp_Settings___ZN34_INTERNAL_12_settings_cpp_Settings5__RRXEj|
#line 587
|__asm___12_settings_cpp_Settings___ZN34_INTERNAL_12_settings_cpp_Settings5__RRXEj| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
