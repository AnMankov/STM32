; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o.\objects\base_to_pc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\base_to_pc.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I"..\Lib\CRC Modbus\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I..\Lib\Objects -I.\Source\Ext_Dev\inc\AT45 -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\base_to_pc.crf Source\Tasks\src\base_to_pc.cpp]
                          THUMB

                          AREA ||i._Z10base_to_pcPv||, CODE, READONLY, ALIGN=2

                  _Z10base_to_pcPv PROC ; base_to_pc(void*)
;;;18     //----- Задача RTOS -------------------------------------------------------------------------------------------------
;;;19     void base_to_pc( void *Params ) //обмен базы с ПК; только для базы
000000  bf00              NOP      
;;;20     {
;;;21       constexpr uint16_t PLACEBO_DLY_MS = 1000U;
;;;22       constexpr uint16_t START_DLY_MS   =  250U;
000002  bf00              NOP      
;;;23     
;;;24       if ( DevDeterm.get_dev_type() != TModel::TDevType::_BASE )
000004  bf00              NOP      
000006  4814              LDR      r0,|L1.88|
000008  7800              LDRB     r0,[r0,#0]
00000a  b128              CBZ      r0,|L1.24|
;;;25       {
;;;26         for ( ;; )
00000c  bf00              NOP      
                  |L1.14|
;;;27         {
;;;28           vTaskDelay( pdMS_TO_TICKS( PLACEBO_DLY_MS ) );
00000e  f44f707a          MOV      r0,#0x3e8
000012  f7fffffe          BL       vTaskDelay
000016  e7fa              B        |L1.14|
                  |L1.24|
;;;29         }
;;;30       }
;;;31       
;;;32       vTaskDelay( pdMS_TO_TICKS( START_DLY_MS ) ); //задержка чтобы успела хотя бы 2 цикла отработать задача считывания данных с кодового переключателя
000018  20fa              MOVS     r0,#0xfa
00001a  f7fffffe          BL       vTaskDelay
;;;33       
;;;34       BaseToPc.StrIx = static_cast<uint8_t>( Model.get_dev_type() );
00001e  480f              LDR      r0,|L1.92|
000020  f7fffffe          BL       _ZN6TModel12get_dev_typeEv ; TModel::get_dev_type()
000024  490e              LDR      r1,|L1.96|
000026  f8810227          STRB     r0,[r1,#0x227]
;;;35       BaseToPc.pin_clk_config();
00002a  4608              MOV      r0,r1
00002c  f7fffffe          BL       _ZN6TUsart14pin_clk_configEv ; TUsart::pin_clk_config()
;;;36     
;;;37       BaseToPc.hw_init( TModbusLink::_1_5_CH_BITS_NBR );
000030  2111              MOVS     r1,#0x11
000032  480b              LDR      r0,|L1.96|
000034  f7fffffe          BL       _ZN6TUsart7hw_initEh ; TUsart::hw_init(unsigned char)
;;;38       BaseToPc.init_dma();
000038  4809              LDR      r0,|L1.96|
00003a  f7fffffe          BL       _ZN11TModbusLink8init_dmaEv ; TModbusLink::init_dma()
;;;39     
;;;40       for ( ;; )
00003e  bf00              NOP      
                  |L1.64|
;;;41       {
;;;42     //    Do.closed();
;;;43     //    addr_determ();
;;;44     //    Do.open();
;;;45         BaseToPc.set_addr( Model.get_mb_addr() ); //модбас-адрес обмена определяется настройкой
000040  4806              LDR      r0,|L1.92|
000042  f7fffffe          BL       _ZN6TModel11get_mb_addrEv ; TModel::get_mb_addr()
000046  4604              MOV      r4,r0
000048  4621              MOV      r1,r4
00004a  4805              LDR      r0,|L1.96|
00004c  f7fffffe          BL       _ZN11TModbusLink8set_addrEh ; TModbusLink::set_addr(unsigned char)
;;;46         BaseToPc.fsm();
000050  4803              LDR      r0,|L1.96|
000052  f7fffffe          BL       _ZN10TModbusApp3fsmEv ; TModbusApp::fsm()
000056  e7f3              B        |L1.64|
;;;47         
;;;48       }
;;;49     }
;;;50     //\---- Задача RTOS -------------------------------------------------------------------------------------------------
                          ENDP

                  |L1.88|
                          DCD      DevDeterm
                  |L1.92|
                          DCD      Model
                  |L1.96|
                          DCD      BaseToPc

                          AREA ||i._ZN36_INTERNAL_14_base_to_pc_cpp_BaseToPc11addr_determEv||, CODE, READONLY, ALIGN=2

                  _ZN36_INTERNAL_14_base_to_pc_cpp_BaseToPc11addr_determEv PROC ; [local to base_to_pc_cpp]::addr_determ()
;;;51     
;;;52     static void addr_determ()
000000  b570              PUSH     {r4-r6,lr}
;;;53     {
;;;54       uint8_t CodeSw = Model.get_code_sw();
000002  4809              LDR      r0,|L2.40|
000004  f7fffffe          BL       _ZN6TModel11get_code_swEv ; TModel::get_code_sw()
000008  4604              MOV      r4,r0
;;;55       
;;;56       if ( CodeSw == 0U )
00000a  b944              CBNZ     r4,|L2.30|
;;;57       {
;;;58         BaseToPc.set_addr( Model.get_mb_addr() ); //модбас-адрес обмена определяется настройкой
00000c  4806              LDR      r0,|L2.40|
00000e  f7fffffe          BL       _ZN6TModel11get_mb_addrEv ; TModel::get_mb_addr()
000012  4605              MOV      r5,r0
000014  4629              MOV      r1,r5
000016  4805              LDR      r0,|L2.44|
000018  f7fffffe          BL       _ZN11TModbusLink8set_addrEh ; TModbusLink::set_addr(unsigned char)
00001c  e003              B        |L2.38|
                  |L2.30|
;;;59       }
;;;60       else
;;;61       {
;;;62         BaseToPc.set_addr( CodeSw ); //модбас-адрес обмена определяется кодом с галетника
00001e  4621              MOV      r1,r4
000020  4802              LDR      r0,|L2.44|
000022  f7fffffe          BL       _ZN11TModbusLink8set_addrEh ; TModbusLink::set_addr(unsigned char)
                  |L2.38|
;;;63       }
;;;64     }
000026  bd70              POP      {r4-r6,pc}
                          ENDP

                  |L2.40|
                          DCD      Model
                  |L2.44|
                          DCD      BaseToPc

                          AREA ||i.__sti___14_base_to_pc_cpp_BaseToPc||, CODE, READONLY, ALIGN=2

                  __sti___14_base_to_pc_cpp_BaseToPc PROC
000000  b51c              PUSH     {r2-r4,lr}
000002  4808              LDR      r0,|L3.36|
000004  4908              LDR      r1,|L3.40|
000006  4b09              LDR      r3,|L3.44|
000008  2201              MOVS     r2,#1
00000a  e9cd1000          STRD     r1,r0,[sp,#0]
00000e  4908              LDR      r1,|L3.48|
000010  4808              LDR      r0,|L3.52|
000012  f7fffffe          BL       _ZN10TModbusAppC1ERK9TUsart_HWN11TModbusLink9TProcTypeEPN12TDevHandlers11TPduHandlerEPPvS9_ ; TModbusApp::TModbusApp(const TUsart_HW&, TModbusLink::TProcType, TDevHandlers::TPduHandler*, void**, void**)
000016  4604              MOV      r4,r0
000018  4a07              LDR      r2,|L3.56|
00001a  4908              LDR      r1,|L3.60|
00001c  f7fffffe          BL       __aeabi_atexit
000020  bd1c              POP      {r2-r4,pc}
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      SlaveCommErrSem
                  |L3.40|
                          DCD      SlaveRtoTrigSem
                  |L3.44|
                          DCD      BaseToPcPduHandler
                  |L3.48|
                          DCD      UsartExt_HW
                  |L3.52|
                          DCD      BaseToPc
                  |L3.56|
                          DCD      __dso_handle
                  |L3.60|
                          DCD      _ZN10TModbusAppD1Ev ; TModbusApp::~TModbusApp()

                          AREA ||.ARM.exidx||, LINKORDER=||i._Z10base_to_pcPv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._Z10base_to_pcPv||
                          DCD      0x00000001

                          AREA ||area_number.5||, LINKORDER=||i._ZN36_INTERNAL_14_base_to_pc_cpp_BaseToPc11addr_determEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN36_INTERNAL_14_base_to_pc_cpp_BaseToPc11addr_determEv||
                          DCD      0x00000001

                          AREA ||area_number.6||, LINKORDER=||i.__sti___14_base_to_pc_cpp_BaseToPc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__sti___14_base_to_pc_cpp_BaseToPc||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  BaseToPc
                          %        608

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___14_base_to_pc_cpp_BaseToPc

;*** Start embedded assembler ***

#line 1 "Source\\Tasks\\src\\base_to_pc.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_base_to_pc_cpp_BaseToPc___ZN36_INTERNAL_14_base_to_pc_cpp_BaseToPc7__REV16Ej|
#line 388 ".\\Source\\Core\\inc\\cmsis_armcc.h"
|__asm___14_base_to_pc_cpp_BaseToPc___ZN36_INTERNAL_14_base_to_pc_cpp_BaseToPc7__REV16Ej| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_base_to_pc_cpp_BaseToPc___ZN36_INTERNAL_14_base_to_pc_cpp_BaseToPc7__REVSHEi|
#line 402
|__asm___14_base_to_pc_cpp_BaseToPc___ZN36_INTERNAL_14_base_to_pc_cpp_BaseToPc7__REVSHEi| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_base_to_pc_cpp_BaseToPc___ZN36_INTERNAL_14_base_to_pc_cpp_BaseToPc5__RRXEj|
#line 587
|__asm___14_base_to_pc_cpp_BaseToPc___ZN36_INTERNAL_14_base_to_pc_cpp_BaseToPc5__RRXEj| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
