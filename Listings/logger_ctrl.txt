; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o.\objects\logger_ctrl.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\logger_ctrl.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I"..\Lib\CRC Modbus\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I..\Lib\Objects -I.\Source\Ext_Dev\inc\AT45 -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\logger_ctrl.crf Source\Tasks\src\logger_ctrl.cpp]
                          THUMB

                          AREA ||i._Z11logger_ctrlPv||, CODE, READONLY, ALIGN=2

                  _Z11logger_ctrlPv PROC ; logger_ctrl(void*)
;;;23     
;;;24     void logger_ctrl( void *Params )
000000  bf00              NOP      
;;;25     {
;;;26       constexpr uint32_t TASK_DLY_MS = 1000U;
;;;27       
;;;28       if ( Model.get_dev_type() != TModel::TDevType::_BASE )
000002  4823              LDR      r0,|L1.144|
000004  f7fffffe          BL       _ZN6TModel12get_dev_typeEv ; TModel::get_dev_type()
000008  b128              CBZ      r0,|L1.22|
;;;29       {
;;;30         for ( ;; )
00000a  bf00              NOP      
                  |L1.12|
;;;31         {
;;;32           vTaskDelay( pdMS_TO_TICKS( TASK_DLY_MS ) );
00000c  f44f707a          MOV      r0,#0x3e8
000010  f7fffffe          BL       vTaskDelay
000014  e7fa              B        |L1.12|
                  |L1.22|
;;;33         }
;;;34       }
;;;35       Model.set_led_mode( TModel::TLedMode::__CONST_ON );
000016  2101              MOVS     r1,#1
000018  481d              LDR      r0,|L1.144|
00001a  f7fffffe          BL       _ZN6TModel12set_led_modeEN9TSettings8TLedModeE ; TModel::set_led_mode(TSettings::TLedMode)
;;;36     	
;;;37     
;;;38     //  AT45.init_driver();
;;;39     //  AT45.check_chip();
;;;40     
;;;41     //  TRec Rec;
;;;42     //  get_data( Rec, Model ); //получать данные необходимо синхронно с их появлением на базе
;;;43     //                          //когда данные записывать разберется драйвер флэш
;;;44     //  AT45.write( static_cast<const uint8_t *>(&Rec), __REC_SIZE );
;;;45       
;;;46     
;;;47       for ( ;; )
00001e  bf00              NOP      
                  |L1.32|
;;;48       {
;;;49     	  if ( Model.get_btn_mode() == TModel::TPress::__RELEASE_LESS_1_SEC )
000020  481b              LDR      r0,|L1.144|
000022  f7fffffe          BL       _ZN6TModel12get_btn_modeEv ; TModel::get_btn_mode()
000026  2804              CMP      r0,#4
000028  d12e              BNE      |L1.136|
;;;50         {
;;;51           Model.set_btn_mode( TModel::TPress::__RELEASE );
00002a  2100              MOVS     r1,#0
00002c  4818              LDR      r0,|L1.144|
00002e  f7fffffe          BL       _ZN6TModel12set_btn_modeEN9TSettings6TPressE ; TModel::set_btn_mode(TSettings::TPress)
;;;52           Model.set_led_mode( TModel::TLedMode::__BLINK_1_S );
000032  2102              MOVS     r1,#2
000034  4816              LDR      r0,|L1.144|
000036  f7fffffe          BL       _ZN6TModel12set_led_modeEN9TSettings8TLedModeE ; TModel::set_led_mode(TSettings::TLedMode)
;;;53           
;;;54           for ( ;; )
00003a  bf00              NOP      
                  |L1.60|
;;;55           {
;;;56             if ( xSemaphoreTake( WrFlash, 0U ) == pdPASS )
00003c  2300              MOVS     r3,#0
00003e  461a              MOV      r2,r3
000040  4619              MOV      r1,r3
000042  4814              LDR      r0,|L1.148|
000044  6800              LDR      r0,[r0,#0]  ; WrFlash
000046  f7fffffe          BL       xQueueGenericReceive
00004a  2801              CMP      r0,#1
00004c  d109              BNE      |L1.98|
;;;57             {
;;;58               static TRec Rec;
;;;59               get_data( Rec, Model ); //получать данные необходимо синхронно с их появлением на базе
00004e  4910              LDR      r1,|L1.144|
000050  4811              LDR      r0,|L1.152|
000052  f7fffffe          BL       _ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc918get_dataER4TRecR6TModel ; [local to logger_ctrl_cpp]::get_data(TRec&, TModel&)
;;;60                                       //когда данные записывать разберется драйвер флэш
;;;61               buf_process( &Rec, Buf, TFlash::PAGE_SIZE );
000056  f44f6200          MOV      r2,#0x800
00005a  4910              LDR      r1,|L1.156|
00005c  480e              LDR      r0,|L1.152|
00005e  f7fffffe          BL       _ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc9111buf_processEPK4TRecPht ; [local to logger_ctrl_cpp]::buf_process(const TRec*, unsigned char*, unsigned short)
                  |L1.98|
;;;62             }
;;;63             
;;;64             if ( Model.get_btn_mode() == TModel::TPress::__RELEASE_LESS_1_SEC )
000062  480b              LDR      r0,|L1.144|
000064  f7fffffe          BL       _ZN6TModel12get_btn_modeEv ; TModel::get_btn_mode()
000068  2804              CMP      r0,#4
00006a  d108              BNE      |L1.126|
;;;65             {
;;;66               Model.set_btn_mode( TModel::TPress::__RELEASE );
00006c  2100              MOVS     r1,#0
00006e  4808              LDR      r0,|L1.144|
000070  f7fffffe          BL       _ZN6TModel12set_btn_modeEN9TSettings6TPressE ; TModel::set_btn_mode(TSettings::TPress)
;;;67               Model.set_led_mode( TModel::TLedMode::__CONST_ON );
000074  2101              MOVS     r1,#1
000076  4806              LDR      r0,|L1.144|
000078  f7fffffe          BL       _ZN6TModel12set_led_modeEN9TSettings8TLedModeE ; TModel::set_led_mode(TSettings::TLedMode)
;;;68               break;
00007c  e003              B        |L1.134|
                  |L1.126|
;;;69             }
;;;70             
;;;71             vTaskDelay( pdMS_TO_TICKS( 10U ) );
00007e  200a              MOVS     r0,#0xa
000080  f7fffffe          BL       vTaskDelay
000084  e7da              B        |L1.60|
                  |L1.134|
000086  bf00              NOP                            ;68
                  |L1.136|
;;;72             
;;;73           }
;;;74         }
;;;75         
;;;76         vTaskDelay( pdMS_TO_TICKS( 10U ) );
000088  200a              MOVS     r0,#0xa
00008a  f7fffffe          BL       vTaskDelay
00008e  e7c7              B        |L1.32|
;;;77         												
;;;78     		  
;;;79     //      vTaskDelay( pdMS_TO_TICKS( TASK_DLY_MS ) );
;;;80       }  
;;;81     }
;;;82     
                          ENDP

                  |L1.144|
                          DCD      Model
                  |L1.148|
                          DCD      WrFlash
                  |L1.152|
                          DCD      _ZZ11logger_ctrlPvE3Rec ; logger_ctrl(void*)::Rec
                  |L1.156|
                          DCD      Buf

                          AREA ||i._ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc9111buf_processEPK4TRecPht||, CODE, READONLY, ALIGN=2

                  _ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc9111buf_processEPK4TRecPht PROC ; [local to logger_ctrl_cpp]::buf_process(const TRec*, unsigned char*, unsigned short)
;;;97     
;;;98     static void buf_process( const TRec *Src, uint8_t *Buf, uint16_t BufSize )
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;99     {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;100      static uint16_t Ix = 0U;
;;;101    	uint16_t NewIx = 0U;
00000a  2000              MOVS     r0,#0
00000c  9000              STR      r0,[sp,#0]
;;;102    	
;;;103    	NewIx = Ix + __REC_SIZE;
00000e  4823              LDR      r0,|L2.156|
000010  8800              LDRH     r0,[r0,#0]  ; _ZZN37_INTERNAL_15_logger_ctrl_cpp_9246bc9111buf_processEPK4TRecPhtE2Ix
000012  300b              ADDS     r0,r0,#0xb
000014  b280              UXTH     r0,r0
000016  9000              STR      r0,[sp,#0]
;;;104    	
;;;105    	if ( NewIx > BufSize ) //если новая запись не помещается в буфер
000018  9800              LDR      r0,[sp,#0]
00001a  42b0              CMP      r0,r6
00001c  dd2e              BLE      |L2.124|
;;;106    	{
;;;107    	  NewIx = 0U;
00001e  2000              MOVS     r0,#0
000020  9000              STR      r0,[sp,#0]
;;;108    		//записать текущий буфер во флэш
;;;109        Model.set_led_mode( TModel::TLedMode::__CONST_OFF );
000022  2100              MOVS     r1,#0
000024  481e              LDR      r0,|L2.160|
000026  f7fffffe          BL       _ZN6TModel12set_led_modeEN9TSettings8TLedModeE ; TModel::set_led_mode(TSettings::TLedMode)
;;;110        
;;;111        if ( Flash.DataPageCtr == TFlash::DATA_PAGE_QTY ) //проверка счетчика страниц под запись данных во Flash
00002a  481e              LDR      r0,|L2.164|
00002c  7800              LDRB     r0,[r0,#0]  ; Flash
00002e  285f              CMP      r0,#0x5f
000030  d105              BNE      |L2.62|
;;;112        {
;;;113          Model.set_btn_mode( TModel::TPress::__RELEASE_LESS_1_SEC );
000032  2104              MOVS     r1,#4
000034  481a              LDR      r0,|L2.160|
000036  f7fffffe          BL       _ZN6TModel12set_btn_modeEN9TSettings6TPressE ; TModel::set_btn_mode(TSettings::TPress)
                  |L2.58|
;;;114          return;
;;;115        }  
;;;116    		Flash.write_data( Buf );
;;;117        Model.set_led_mode( TModel::TLedMode::__BLINK_1_S );
;;;118        
;;;119        //очистить буфер
;;;120        auto beg = reinterpret_cast<uint8_t *>( Buf );
;;;121        auto end = reinterpret_cast<uint8_t *>( &Buf[ BufSize ] );   
;;;122        std::fill( beg, end, 0U ); //обнуление массива с выборками
;;;123    		
;;;124        //записать в пустой буфер новую запись
;;;125    		auto Beg = reinterpret_cast<const uint8_t *>( Src );
;;;126        auto End = &(reinterpret_cast<const uint8_t *>( Src ))[__REC_SIZE];
;;;127        std::copy( Beg, End, reinterpret_cast<uint8_t *>( Buf ) );   
;;;128    	}
;;;129    	else
;;;130    	{
;;;131        //записать в буфер новую запись
;;;132    		auto Beg = reinterpret_cast<const uint8_t *>( Src );
;;;133        auto End = &(reinterpret_cast<const uint8_t *>( Src ))[__REC_SIZE];
;;;134        std::copy( Beg, End, &(reinterpret_cast<uint8_t *>( Buf ))[ Ix ] );
;;;135    	}
;;;136    	
;;;137    	Ix = NewIx;
;;;138    }
00003a  e8bd8ff8          POP      {r3-r11,pc}
                  |L2.62|
00003e  4621              MOV      r1,r4                 ;116
000040  4818              LDR      r0,|L2.164|
000042  f7fffffe          BL       _ZN6TFlash10write_dataEPKh ; TFlash::write_data(const unsigned char*)
000046  2102              MOVS     r1,#2                 ;117
000048  4815              LDR      r0,|L2.160|
00004a  f7fffffe          BL       _ZN6TModel12set_led_modeEN9TSettings8TLedModeE ; TModel::set_led_mode(TSettings::TLedMode)
00004e  4627              MOV      r7,r4                 ;120
000050  eb040a06          ADD      r10,r4,r6             ;121
000054  4638              MOV      r0,r7                 ;122
000056  4651              MOV      r1,r10                ;122
000058  f04f0900          MOV      r9,#0                 ;122
00005c  e002              B        |L2.100|
                  |L2.94|
00005e  f8809000          STRB     r9,[r0,#0]            ;122
000062  1c40              ADDS     r0,r0,#1              ;122
                  |L2.100|
000064  4288              CMP      r0,r1                 ;122
000066  d1fa              BNE      |L2.94|
000068  bf00              NOP                            ;122
00006a  46a8              MOV      r8,r5                 ;125
00006c  f1050b0b          ADD      r11,r5,#0xb           ;126
000070  4622              MOV      r2,r4                 ;127
000072  4659              MOV      r1,r11                ;127
000074  4640              MOV      r0,r8                 ;127
000076  f7fffffe          BL       _ZSt4copyIPKhPhET0_T_S4_S3_ ; T2 std::copy<const unsigned char*, unsigned char*>(T1, T1, T2)
00007a  e00a              B        |L2.146|
                  |L2.124|
00007c  462f              MOV      r7,r5                 ;132
00007e  f105080b          ADD      r8,r5,#0xb            ;133
000082  4806              LDR      r0,|L2.156|
000084  8800              LDRH     r0,[r0,#0]            ;134  ; _ZZN37_INTERNAL_15_logger_ctrl_cpp_9246bc9111buf_processEPK4TRecPhtE2Ix
000086  1822              ADDS     r2,r4,r0              ;134
000088  4641              MOV      r1,r8                 ;134
00008a  4638              MOV      r0,r7                 ;134
00008c  f7fffffe          BL       _ZSt4copyIPKhPhET0_T_S4_S3_ ; T2 std::copy<const unsigned char*, unsigned char*>(T1, T1, T2)
000090  bf00              NOP                            ;135
                  |L2.146|
000092  4902              LDR      r1,|L2.156|
000094  9800              LDR      r0,[sp,#0]            ;137
000096  8008              STRH     r0,[r1,#0]            ;137
000098  bf00              NOP      
00009a  e7ce              B        |L2.58|
                          ENDP

                  |L2.156|
                          DCD      _ZZN37_INTERNAL_15_logger_ctrl_cpp_9246bc9111buf_processEPK4TRecPhtE2Ix ; [local to logger_ctrl_cpp]::buf_process(const TRec*, unsigned char*, unsigned short)::Ix
                  |L2.160|
                          DCD      Model
                  |L2.164|
                          DCD      Flash

                          AREA ||i._ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc918get_dataER4TRecR6TModel||, CODE, READONLY, ALIGN=1

                  _ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc918get_dataER4TRecR6TModel PROC ; [local to logger_ctrl_cpp]::get_data(TRec&, TModel&)
;;;82     
;;;83     static void get_data( TRec &Rec, TModel &Model )
000000  b570              PUSH     {r4-r6,lr}
;;;84     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;85       Rec.Base.CodeSw          = Model.get_code_sw();
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       _ZN6TModel11get_code_swEv ; TModel::get_code_sw()
00000c  7120              STRB     r0,[r4,#4]
;;;86       Rec.Base.Angle           = Model.get_my_angle();
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       _ZN6TModel12get_my_angleEv ; TModel::get_my_angle()
000014  1d21              ADDS     r1,r4,#4
000016  f8a40005          STRH     r0,[r4,#5]
;;;87       Rec.Base.SampleValidSign = Model.get_sample_valid_sign();
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       _ZN6TModel21get_sample_valid_signEv ; TModel::get_sample_valid_sign()
000020  71e0              STRB     r0,[r4,#7]
;;;88       
;;;89       Rec.Sens.CodeSw          = Model.get_hc_code_sw();
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       _ZN6TModel14get_hc_code_swEv ; TModel::get_hc_code_sw()
000028  7020              STRB     r0,[r4,#0]
;;;90       Rec.Sens.Angle           = Model.get_sens_angle();
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       _ZN6TModel14get_sens_angleEv ; TModel::get_sens_angle()
000030  f8a40001          STRH     r0,[r4,#1]
;;;91       Rec.Sens.SampleValidSign = Model.get_sens_sample_valid_sign();
000034  4628              MOV      r0,r5
000036  f7fffffe          BL       _ZN6TModel26get_sens_sample_valid_signEv ; TModel::get_sens_sample_valid_sign()
00003a  70e0              STRB     r0,[r4,#3]
;;;92       
;;;93       Rec.OpenAngle            = Model.get_open_angle();
00003c  4628              MOV      r0,r5
00003e  f7fffffe          BL       _ZN6TModel14get_open_angleEv ; TModel::get_open_angle()
000042  eebd0ac0          VCVT.S32.F32 s0,s0
000046  ee100a10          VMOV     r0,s0
00004a  b200              SXTH     r0,r0
00004c  8120              STRH     r0,[r4,#8]
;;;94       Rec.State                = Model.get_dev_state();
00004e  4628              MOV      r0,r5
000050  f7fffffe          BL       _ZN6TModel13get_dev_stateEv ; TModel::get_dev_state()
000054  72a0              STRB     r0,[r4,#0xa]
;;;95       
;;;96     }
000056  bd70              POP      {r4-r6,pc}
;;;97     
                          ENDP


                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc9111buf_processEPK4TRecPht||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc9111buf_processEPK4TRecPht||
                          DCD      0x00000001

                          AREA ||area_number.5||, LINKORDER=||i._ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc918get_dataER4TRecR6TModel||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc918get_dataER4TRecR6TModel||
                          DCD      0x00000001

                          AREA ||area_number.6||, LINKORDER=||i._Z11logger_ctrlPv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z11logger_ctrlPv||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  Buf
                          %        2048
                  _ZZ11logger_ctrlPvE3Rec ; logger_ctrl(void*)::Rec
                          %        11

                          AREA ||.data||, DATA, ALIGN=1

                  LoggerState
000000  0000              DCB      0x00,0x00
                  _ZZN37_INTERNAL_15_logger_ctrl_cpp_9246bc9111buf_processEPK4TRecPhtE2Ix ; [local to logger_ctrl_cpp]::buf_process(const TRec*, unsigned char*, unsigned short)::Ix
000002  0000              DCW      0x0000

                          AREA ||t._ZSt4copyIPKhPhET0_T_S4_S3_||, COMGROUP=_ZSt4copyIPKhPhET0_T_S4_S3_, CODE, READONLY, ALIGN=1

                  _ZSt4copyIPKhPhET0_T_S4_S3_ PROC ; T2 std::copy<const unsigned char*, unsigned char*>(T1, T1, T2)
;;;96     inline _OutputIter
;;;97     copy (_InputIter __first, _InputIter __last, _OutputIter __res)
000000  4603              MOV      r3,r0
;;;98     {
;;;99         _RWSTD_ASSERT_RANGE (__first, __last);
;;;100    
;;;101        for (; __first != __last; ++__first,++__res)
000002  e003              B        |L30.12|
                  |L30.4|
;;;102            *__res = *__first;
000004  7818              LDRB     r0,[r3,#0]
000006  7010              STRB     r0,[r2,#0]
000008  1c5b              ADDS     r3,r3,#1              ;101
00000a  1c52              ADDS     r2,r2,#1              ;101
                  |L30.12|
00000c  428b              CMP      r3,r1                 ;101
00000e  d1f9              BNE      |L30.4|
;;;103        return __res;
000010  4610              MOV      r0,r2
;;;104    }
000012  4770              BX       lr
;;;105    
                          ENDP


                          AREA ||area_number.31||, COMGROUP=_ZSt4copyIPKhPhET0_T_S4_S3_, LINKORDER=||t._ZSt4copyIPKhPhET0_T_S4_S3_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.31||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZSt4copyIPKhPhET0_T_S4_S3_||
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "Source\\Tasks\\src\\logger_ctrl.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_logger_ctrl_cpp_9246bc91___ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc917__REV16Ej|
#line 388 ".\\Source\\Core\\inc\\cmsis_armcc.h"
|__asm___15_logger_ctrl_cpp_9246bc91___ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc917__REV16Ej| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_logger_ctrl_cpp_9246bc91___ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc917__REVSHEi|
#line 402
|__asm___15_logger_ctrl_cpp_9246bc91___ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc917__REVSHEi| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_logger_ctrl_cpp_9246bc91___ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc915__RRXEj|
#line 587
|__asm___15_logger_ctrl_cpp_9246bc91___ZN37_INTERNAL_15_logger_ctrl_cpp_9246bc915__RRXEj| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
