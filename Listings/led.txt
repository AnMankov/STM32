; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o.\objects\led.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\led.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I.\Source\Ext_Dev\inc\AT45 -I.\Objects -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\led.crf Source\Ext_Dev\src\Led.cpp]
                          THUMB

                          AREA ||i._ZN23_INTERNAL_7_Led_cpp_Led17LL_GPIO_TogglePinEP12GPIO_TypeDefj||, CODE, READONLY, ALIGN=1

                  _ZN23_INTERNAL_7_Led_cpp_Led17LL_GPIO_TogglePinEP12GPIO_TypeDefj PROC ; [local to Led_cpp]::LL_GPIO_TogglePin(GPIO_TypeDef*, unsigned)
;;;1021     */
;;;1022   __STATIC_INLINE void LL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
000000  6942              LDR      r2,[r0,#0x14]
;;;1023   {
;;;1024     WRITE_REG(GPIOx->ODR, READ_REG(GPIOx->ODR) ^ PinMask);
000002  404a              EORS     r2,r2,r1
000004  6142              STR      r2,[r0,#0x14]
;;;1025   }
000006  4770              BX       lr
;;;1026   
                          ENDP


                          AREA ||i._ZN23_INTERNAL_7_Led_cpp_Led22LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj||, CODE, READONLY, ALIGN=1

                  _ZN23_INTERNAL_7_Led_cpp_Led22LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj PROC ; [local to Led_cpp]::LL_GPIO_ResetOutputPin(GPIO_TypeDef*, unsigned)
;;;992      */
;;;993    __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
000000  6281              STR      r1,[r0,#0x28]
;;;994    {
;;;995      WRITE_REG(GPIOx->BRR, PinMask);
;;;996    }
000002  4770              BX       lr
;;;997    
                          ENDP


                          AREA ||i._ZN4TLed11free_toggleEv||, CODE, READONLY, ALIGN=1

                  _ZN4TLed11free_toggleEv PROC ; TLed::free_toggle()
;;;72     
;;;73     void TLed::free_toggle()
000000  b510              PUSH     {r4,lr}
;;;74     {
000002  4604              MOV      r4,r0
;;;75       LL_GPIO_TogglePin( Pin.Gpio, Pin.Nbr );
000004  6822              LDR      r2,[r4,#0]
000006  ca03              LDM      r2!,{r0,r1}
000008  f7fffffe          BL       _ZN23_INTERNAL_7_Led_cpp_Led17LL_GPIO_TogglePinEP12GPIO_TypeDefj ; [local to Led_cpp]::LL_GPIO_TogglePin(GPIO_TypeDef*, unsigned)
;;;76     }
00000c  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i._ZN4TLed2onEv||, CODE, READONLY, ALIGN=1

                  _ZN4TLed2onEv PROC ; TLed::on()
;;;44     
;;;45     void TLed::on()
000000  6803              LDR      r3,[r0,#0]
;;;46     {
;;;47       LL_GPIO_SetOutputPin( Pin.Gpio, Pin.Nbr );
000002  cb06              LDM      r3!,{r1,r2}
000004  618a              STR      r2,[r1,#0x18]
000006  bf00              NOP      
;;;48     }
000008  4770              BX       lr
;;;49     
                          ENDP


                          AREA ||i._ZN4TLed3offEv||, CODE, READONLY, ALIGN=1

                  _ZN4TLed3offEv PROC ; TLed::off()
;;;49     
;;;50     void TLed::off()
000000  b510              PUSH     {r4,lr}
;;;51     {
000002  4604              MOV      r4,r0
;;;52       LL_GPIO_ResetOutputPin( Pin.Gpio, Pin.Nbr );
000004  6822              LDR      r2,[r4,#0]
000006  ca03              LDM      r2!,{r0,r1}
000008  f7fffffe          BL       _ZN23_INTERNAL_7_Led_cpp_Led22LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj ; [local to Led_cpp]::LL_GPIO_ResetOutputPin(GPIO_TypeDef*, unsigned)
;;;53     }
00000c  bd10              POP      {r4,pc}
;;;54     
                          ENDP


                          AREA ||i._ZN4TLed4initEv||, CODE, READONLY, ALIGN=1

                  _ZN4TLed4initEv PROC ; TLed::init()
;;;29     
;;;30     void TLed::init()                                       //аппаратная инициализация
000000  b510              PUSH     {r4,lr}
;;;31     {                                                       
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;32       Pin.en_clk( Pin.ClkPortMask );                        //включение тактирования GPIO, если не включено
000006  6822              LDR      r2,[r4,#0]
000008  e9d20102          LDRD     r0,r1,[r2,#8]
00000c  4788              BLX      r1
;;;33       LL_GPIO_ResetOutputPin( Pin.Gpio, Pin.Nbr );
00000e  6822              LDR      r2,[r4,#0]
000010  ca03              LDM      r2!,{r0,r1}
000012  f7fffffe          BL       _ZN23_INTERNAL_7_Led_cpp_Led22LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj ; [local to Led_cpp]::LL_GPIO_ResetOutputPin(GPIO_TypeDef*, unsigned)
;;;34       
;;;35       LL_GPIO_InitTypeDef GPIO_InitStruct;
;;;36       
;;;37       GPIO_InitStruct.Pin        = Pin.Nbr;
000016  6820              LDR      r0,[r4,#0]
000018  6840              LDR      r0,[r0,#4]
00001a  9000              STR      r0,[sp,#0]
;;;38       GPIO_InitStruct.Mode       = LL_GPIO_MODE_OUTPUT;
00001c  2001              MOVS     r0,#1
00001e  9001              STR      r0,[sp,#4]
;;;39       GPIO_InitStruct.Speed      = LL_GPIO_SPEED_FREQ_HIGH;
000020  2002              MOVS     r0,#2
000022  9002              STR      r0,[sp,#8]
;;;40       GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
000024  2000              MOVS     r0,#0
000026  9003              STR      r0,[sp,#0xc]
;;;41       GPIO_InitStruct.Pull       = LL_GPIO_PULL_NO;
000028  9004              STR      r0,[sp,#0x10]
;;;42       LL_GPIO_Init( Pin.Gpio, &GPIO_InitStruct );
00002a  6821              LDR      r1,[r4,#0]
00002c  6808              LDR      r0,[r1,#0]
00002e  4669              MOV      r1,sp
000030  f7fffffe          BL       LL_GPIO_Init
;;;43     }
000034  b006              ADD      sp,sp,#0x18
000036  bd10              POP      {r4,pc}
;;;44     
                          ENDP


                          AREA ||i._ZN4TLed6toggleEv||, CODE, READONLY, ALIGN=1

                  _ZN4TLed6toggleEv PROC ; TLed::toggle()
;;;54     
;;;55     void TLed::toggle()
000000  b570              PUSH     {r4-r6,lr}
;;;56     {
000002  4604              MOV      r4,r0
;;;57     //  xSemaphoreTake( *Sem, portMAX_DELAY );
;;;58       if (
000004  e9d45002          LDRD     r5,r0,[r4,#8]
000008  1c69              ADDS     r1,r5,#1
00000a  f1400000          ADC      r0,r0,#0
00000e  e9c41002          STRD     r1,r0,[r4,#8]
000012  390a              SUBS     r1,r1,#0xa
000014  f1700000          SBCS     r0,r0,#0
000018  d306              BCC      |L7.40|
;;;59           ++ToggleCtr
;;;60           >=
;;;61           ( TZ_Const::__START_HOLD_CTR )
;;;62          )
;;;63       {
;;;64         LL_GPIO_TogglePin( Pin.Gpio, Pin.Nbr );
00001a  6822              LDR      r2,[r4,#0]
00001c  ca03              LDM      r2!,{r0,r1}
00001e  f7fffffe          BL       _ZN23_INTERNAL_7_Led_cpp_Led17LL_GPIO_TogglePinEP12GPIO_TypeDefj ; [local to Led_cpp]::LL_GPIO_TogglePin(GPIO_TypeDef*, unsigned)
;;;65         ToggleCtr = 0U;
000022  2100              MOVS     r1,#0
000024  60a1              STR      r1,[r4,#8]
000026  60e1              STR      r1,[r4,#0xc]
                  |L7.40|
;;;66       }
;;;67       else
;;;68       {
;;;69     
;;;70       }
;;;71     }
000028  bd70              POP      {r4-r6,pc}
;;;72     
                          ENDP


                          AREA ||i._ZN4TLedC1ERK4TPinPPv||, CODE, READONLY, ALIGN=1

                  _ZN4TLedC2ERK4TPinPPv                  ; Alternate entry point ; TLed::TLed__sub_object(const TPin&, void**)
                  _ZN4TLedC1ERK4TPinPPv PROC ; TLed::TLed(const TPin&, void**)
;;;12     
;;;13     TLed::TLed( 
;;;14                const TPin &_Pin,
;;;15                SemaphoreHandle_t *_Sem
;;;16               )
;;;17     : 
;;;18     Pin( _Pin ),
;;;19     Sem( _Sem ),
;;;20     ToggleCtr( 0U )
;;;21     {
;;;22     
;;;23     }
;;;24     
000000  b510              PUSH     {r4,lr}
000002  6001              STR      r1,[r0,#0]
000004  6042              STR      r2,[r0,#4]
000006  2400              MOVS     r4,#0
000008  6084              STR      r4,[r0,#8]
00000a  60c4              STR      r4,[r0,#0xc]
00000c  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i._ZN4TLedD1Ev||, CODE, READONLY, ALIGN=1

                  _ZN4TLedD2Ev                  ; Alternate entry point ; TLed::~TLed__sub_object()
                  _ZN4TLedD1Ev PROC ; TLed::~TLed()
;;;24     
;;;25     TLed::~TLed()
;;;26     {
;;;27     
;;;28     }
;;;29     
000000  4770              BX       lr
                          ENDP


                          AREA ||i.__sti___7_Led_cpp_Led||, CODE, READONLY, ALIGN=2

                  __sti___7_Led_cpp_Led PROC
000000  b510              PUSH     {r4,lr}
000002  4a0a              LDR      r2,|L10.44|
000004  490a              LDR      r1,|L10.48|
000006  480b              LDR      r0,|L10.52|
000008  f7fffffe          BL       _ZN4TLedC1ERK4TPinPPv ; TLed::TLed(const TPin&, void**)
00000c  4604              MOV      r4,r0
00000e  4a0a              LDR      r2,|L10.56|
000010  490a              LDR      r1,|L10.60|
000012  f7fffffe          BL       __aeabi_atexit
000016  2200              MOVS     r2,#0
000018  4909              LDR      r1,|L10.64|
00001a  480a              LDR      r0,|L10.68|
00001c  f7fffffe          BL       _ZN4TLedC1ERK4TPinPPv ; TLed::TLed(const TPin&, void**)
000020  4604              MOV      r4,r0
000022  4a05              LDR      r2,|L10.56|
000024  4905              LDR      r1,|L10.60|
000026  f7fffffe          BL       __aeabi_atexit
00002a  bd10              POP      {r4,pc}
                          ENDP

                  |L10.44|
                          DCD      LedTimer_TrigSem
                  |L10.48|
                          DCD      Led_HW
                  |L10.52|
                          DCD      Led
                  |L10.56|
                          DCD      __dso_handle
                  |L10.60|
                          DCD      _ZN4TLedD1Ev ; TLed::~TLed()
                  |L10.64|
                          DCD      UCG1_HW
                  |L10.68|
                          DCD      UCG1

                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN4TLedC1ERK4TPinPPv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN4TLedC1ERK4TPinPPv||
                          DCD      0x00000001

                          AREA ||area_number.12||, LINKORDER=||i._ZN4TLedD1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4TLedD1Ev||
                          DCD      0x00000001

                          AREA ||area_number.13||, LINKORDER=||i._ZN4TLed4initEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4TLed4initEv||
                          DCD      0x00000001

                          AREA ||area_number.14||, LINKORDER=||i._ZN4TLed2onEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4TLed2onEv||
                          DCD      0x00000001

                          AREA ||area_number.15||, LINKORDER=||i._ZN4TLed3offEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4TLed3offEv||
                          DCD      0x00000001

                          AREA ||area_number.16||, LINKORDER=||i._ZN4TLed6toggleEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.16||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4TLed6toggleEv||
                          DCD      0x00000001

                          AREA ||area_number.17||, LINKORDER=||i._ZN4TLed11free_toggleEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4TLed11free_toggleEv||
                          DCD      0x00000001

                          AREA ||area_number.18||, LINKORDER=||i.__sti___7_Led_cpp_Led||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.18||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__sti___7_Led_cpp_Led||
                          DCD      0x00000001

                          AREA ||area_number.19||, LINKORDER=||i._ZN23_INTERNAL_7_Led_cpp_Led22LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN23_INTERNAL_7_Led_cpp_Led22LL_GPIO_ResetOutputPinEP12GPIO_TypeDefj||
                          DCD      0x00000001

                          AREA ||area_number.20||, LINKORDER=||i._ZN23_INTERNAL_7_Led_cpp_Led17LL_GPIO_TogglePinEP12GPIO_TypeDefj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.20||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN23_INTERNAL_7_Led_cpp_Led17LL_GPIO_TogglePinEP12GPIO_TypeDefj||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  Led
                          %        16
                  UCG1
                          %        16

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___7_Led_cpp_Led

;*** Start embedded assembler ***

#line 1 "Source\\Ext_Dev\\src\\Led.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_Led_cpp_Led___ZN23_INTERNAL_7_Led_cpp_Led7__REV16Ej|
#line 388 ".\\Source\\Core\\inc\\cmsis_armcc.h"
|__asm___7_Led_cpp_Led___ZN23_INTERNAL_7_Led_cpp_Led7__REV16Ej| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_Led_cpp_Led___ZN23_INTERNAL_7_Led_cpp_Led7__REVSHEi|
#line 402
|__asm___7_Led_cpp_Led___ZN23_INTERNAL_7_Led_cpp_Led7__REVSHEi| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_Led_cpp_Led___ZN23_INTERNAL_7_Led_cpp_Led5__RRXEj|
#line 587
|__asm___7_Led_cpp_Led___ZN23_INTERNAL_7_Led_cpp_Led5__RRXEj| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
