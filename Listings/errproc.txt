; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\errproc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\errproc.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I"..\Lib\CRC Modbus\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I..\Lib\Objects -I.\Source\Ext_Dev\inc\AT45 -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\errproc.crf Source\Line\src\ErrProc.c]
                          THUMB

                          AREA ||i.ErrProc||, CODE, READONLY, ALIGN=2

                  ErrProc PROC
;;;25     // 
;;;26     uint16_t ErrProc(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;27       uint32_t ebit=1;
000002  2501              MOVS     r5,#1
;;;28       uint32_t rez=0;
000004  2600              MOVS     r6,#0
;;;29       uint8_t n;
;;;30       for (n=0;n<16;n++) {
000006  2400              MOVS     r4,#0
000008  e016              B        |L1.56|
                  |L1.10|
;;;31         if (errtimes[n]) {
00000a  480d              LDR      r0,|L1.64|
00000c  f8500024          LDR      r0,[r0,r4,LSL #2]
000010  b178              CBZ      r0,|L1.50|
;;;32           rez|=ebit;
000012  432e              ORRS     r6,r6,r5
;;;33           if ((tdlt(errtimes[n])>ERRORTIME)&&(!(NoResetError&ebit))) {
000014  490a              LDR      r1,|L1.64|
000016  f8510024          LDR      r0,[r1,r4,LSL #2]
00001a  f7fffffe          BL       tdlt
00001e  4909              LDR      r1,|L1.68|
000020  4288              CMP      r0,r1
000022  d906              BLS      |L1.50|
000024  f4054070          AND      r0,r5,#0xf000
000028  b918              CBNZ     r0,|L1.50|
;;;34             errtimes[n]=0;
00002a  2000              MOVS     r0,#0
00002c  4904              LDR      r1,|L1.64|
00002e  f8410024          STR      r0,[r1,r4,LSL #2]
                  |L1.50|
;;;35           }
;;;36         }
;;;37         ebit<<=1;
000032  006d              LSLS     r5,r5,#1
000034  1c60              ADDS     r0,r4,#1              ;30
000036  b2c4              UXTB     r4,r0                 ;30
                  |L1.56|
000038  2c10              CMP      r4,#0x10              ;30
00003a  dbe6              BLT      |L1.10|
;;;38       }
;;;39       return rez;
00003c  b2b0              UXTH     r0,r6
;;;40     }
00003e  bd70              POP      {r4-r6,pc}
                          ENDP

                  |L1.64|
                          DCD      errtimes
                  |L1.68|
                          DCD      0x000493e0

                          AREA ||i.SetErr||, CODE, READONLY, ALIGN=2

                  SetErr PROC
;;;13     
;;;14     void SetErr(uint32_t newerr) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
;;;15       uint32_t ebit=1;
000004  2501              MOVS     r5,#1
;;;16       uint8_t n;
;;;17       for (n=0;n<16;n++) {
000006  2400              MOVS     r4,#0
000008  e00a              B        |L2.32|
                  |L2.10|
;;;18         if (newerr&ebit) {
00000a  ea060005          AND      r0,r6,r5
00000e  b120              CBZ      r0,|L2.26|
;;;19           errtimes[n]=zgetssec();
000010  f7fffffe          BL       zgetssec
000014  4904              LDR      r1,|L2.40|
000016  f8410024          STR      r0,[r1,r4,LSL #2]
                  |L2.26|
;;;20         }
;;;21         ebit<<=1;
00001a  006d              LSLS     r5,r5,#1
00001c  1c60              ADDS     r0,r4,#1              ;17
00001e  b2c4              UXTB     r4,r0                 ;17
                  |L2.32|
000020  2c10              CMP      r4,#0x10              ;17
000022  dbf2              BLT      |L2.10|
;;;22       }
;;;23     }
000024  bd70              POP      {r4-r6,pc}
;;;24     
                          ENDP

000026  0000              DCW      0x0000
                  |L2.40|
                          DCD      errtimes

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  errtimes
                          %        64

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  CHANNEL_OFFSET_TAB
000000  081c3044          DCB      0x08,0x1c,0x30,0x44
000004  586c80            DCB      0x58,0x6c,0x80
                  OFFSET_TAB_CCMRx
000007  00                DCB      0x00
000008  00000004          DCB      0x00,0x00,0x00,0x04
00000c  04043c3c          DCB      0x04,0x04,0x3c,0x3c
                  SHIFT_TAB_OCxx
000010  00000800          DCB      0x00,0x00,0x08,0x00
000014  00000800          DCB      0x00,0x00,0x08,0x00
000018  08                DCB      0x08
                  SHIFT_TAB_ICxx
000019  000008            DCB      0x00,0x00,0x08
00001c  00000008          DCB      0x00,0x00,0x00,0x08
000020  0000              DCB      0x00,0x00
                  SHIFT_TAB_CCxP
000022  0002              DCB      0x00,0x02
000024  0406080a          DCB      0x04,0x06,0x08,0x0a
000028  0c1014            DCB      0x0c,0x10,0x14
                  SHIFT_TAB_OISx
00002b  00                DCB      0x00
00002c  01020304          DCB      0x01,0x02,0x03,0x04
000030  0506080a          DCB      0x05,0x06,0x08,0x0a
                  NoResetError
                          DCD      0x0000f000

;*** Start embedded assembler ***

#line 1 "Source\\Line\\src\\ErrProc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_ErrProc_c_fb628c6f____REV16|
#line 388 ".\\Source\\Core\\inc\\cmsis_armcc.h"
|__asm___9_ErrProc_c_fb628c6f____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_ErrProc_c_fb628c6f____REVSH|
#line 402
|__asm___9_ErrProc_c_fb628c6f____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_ErrProc_c_fb628c6f____RRX|
#line 587
|__asm___9_ErrProc_c_fb628c6f____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
