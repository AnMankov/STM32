; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--cpp11 --list --split_sections --debug -c --asm --interleave -o.\objects\median_filter.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\median_filter.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I".\STM32L4 Low Layer drivers\inc" -I"..\Lib\CRC Modbus\inc" -I.\Source\Core\inc -I.\Source\Protocols\inc -I.\Source\Ext_Dev\inc -I.\Source\Ext_Dev\inc\LSM6DS3 -I.\Source\Ext_Dev\inc\LSM303DLHC -I.\Source\Ext_Dev\inc\MPU-9250 -I.\Source\Line\inc -I.\Source\Main\inc -I.\Source\MCU_Drivers\inc -I.\Source\MCU_Drivers\inc -I.\Source\MotionTL\inc -I.\Source\RTOS\inc -I.\Source\Tasks\inc -I..\Lib\Objects -I.\Source\Ext_Dev\inc\AT45 -I.\RTE\_DEBUG -IC:\Keil_v5\ARM\PACK\Keil\STM32L4xx_DFP\2.2.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32L431xx -DHSE_VALUE=8000000 -DUSE_FULL_LL_DRIVER -DSTM32L431xx -DDEBUG --omf_browse=.\objects\median_filter.crf Source\Main\src\median_filter.cpp]
                          THUMB

                          AREA ||i._ZN13TMedianFilter7processEs||, CODE, READONLY, ALIGN=1

                  _ZN13TMedianFilter7processEs PROC ; TMedianFilter::process(short)
;;;18     
;;;19     int16_t TMedianFilter::process( int16_t Val )
000000  b510              PUSH     {r4,lr}
;;;20     {                                                      
000002  4602              MOV      r2,r0
;;;21       uint16_t i;                                                        
;;;22                                                                          
;;;23       if ( Val == Stopper )                                            
000004  f9b2004c          LDRSH    r0,[r2,#0x4c]
000008  4288              CMP      r0,r1
00000a  d103              BNE      |L1.20|
;;;24       {                                                                  
;;;25         Val = Stopper + 1;                                             /* No Stoppers allowed. */
00000c  f8b2004c          LDRH     r0,[r2,#0x4c]
000010  1c40              ADDS     r0,r0,#1
000012  b201              SXTH     r1,r0
                  |L1.20|
;;;26       }                                                                  
;;;27                                                                          
;;;28       if ( (++DataPtr - Buf) >= Size )                 
000014  6a90              LDR      r0,[r2,#0x28]
000016  3008              ADDS     r0,r0,#8
000018  6290              STR      r0,[r2,#0x28]
00001a  1a80              SUBS     r0,r0,r2
00001c  2405              MOVS     r4,#5
00001e  ebb40fe0          CMP      r4,r0,ASR #3
000022  dc00              BGT      |L1.38|
;;;29       {                                                                  
;;;30         DataPtr = Buf;                                                 /* Increment and wrap data in Ptrer.*/
000024  6292              STR      r2,[r2,#0x28]
                  |L1.38|
;;;31       }                                                                  
;;;32                                                                          
;;;33       DataPtr->Val = Val;                                              /* Copy in new Val */
000026  6a90              LDR      r0,[r2,#0x28]
000028  8081              STRH     r1,[r0,#4]
;;;34       Successor = DataPtr->Ptr;                                        /* Save Ptrer to old Val's Successor */
00002a  6a90              LDR      r0,[r2,#0x28]
00002c  6800              LDR      r0,[r0,#0]
00002e  63d0              STR      r0,[r2,#0x3c]
;;;35       Median = &Big;                                                   /* Median initially to first in chain */
000030  f1020034          ADD      r0,r2,#0x34
000034  6490              STR      r0,[r2,#0x48]
;;;36       Scanold = nullptr;                                               /* Scanold initially nullptr. */
000036  2000              MOVS     r0,#0
000038  6450              STR      r0,[r2,#0x44]
;;;37       Scan = &Big;                                                     /* Ptrs to Ptrer to first (largest) Val in chain */
00003a  f1020034          ADD      r0,r2,#0x34
00003e  6410              STR      r0,[r2,#0x40]
;;;38                                                                          
;;;39                                                                          
;;;40       if ( Scan->Ptr == DataPtr )                                     
000040  6c10              LDR      r0,[r2,#0x40]
000042  6800              LDR      r0,[r0,#0]
000044  6a94              LDR      r4,[r2,#0x28]
000046  42a0              CMP      r0,r4
000048  d102              BNE      |L1.80|
;;;41       {                                                                  
;;;42        Scan->Ptr = Successor;                                          /* Handle chain-out of first item in chain as special case */
00004a  e9d2040f          LDRD     r0,r4,[r2,#0x3c]
00004e  6020              STR      r0,[r4,#0]
                  |L1.80|
;;;43       }                                                                  
;;;44     													                  
;;;45       Scanold = Scan;                                                  /* Save this Ptrer and */
000050  6c10              LDR      r0,[r2,#0x40]
000052  6450              STR      r0,[r2,#0x44]
;;;46       Scan = Scan->Ptr ;                                               /* step down chain */
000054  6c10              LDR      r0,[r2,#0x40]
000056  6800              LDR      r0,[r0,#0]
000058  6410              STR      r0,[r2,#0x40]
;;;47                                                                          
;;;48       for ( i = 0 ; i < Size; ++i )                                    /* Loop through the chain, normal loop exit via break. */
00005a  2300              MOVS     r3,#0
00005c  e046              B        |L1.236|
                  |L1.94|
;;;49       {                                                                
;;;50         /* Handle odd-numbered item in chain */                        
;;;51         if ( Scan->Ptr == DataPtr )                                 
00005e  6c10              LDR      r0,[r2,#0x40]
000060  6800              LDR      r0,[r0,#0]
000062  6a94              LDR      r4,[r2,#0x28]
000064  42a0              CMP      r0,r4
000066  d102              BNE      |L1.110|
;;;52         {                                                              
;;;53           Scan->Ptr = Successor;                                       /* Chain out the old Val.*/
000068  e9d2040f          LDRD     r0,r4,[r2,#0x3c]
00006c  6020              STR      r0,[r4,#0]
                  |L1.110|
;;;54         }                                                                
;;;55                                                                          
;;;56         if ( Scan->Val < Val )                                         /* If Val is larger than Scanned Val,*/
00006e  6c10              LDR      r0,[r2,#0x40]
000070  f9b00004          LDRSH    r0,[r0,#4]
000074  4288              CMP      r0,r1
000076  da08              BGE      |L1.138|
;;;57         {                                                                 
;;;58           DataPtr->Ptr = Scanold->Ptr;                                 /* Chain it in here. */
000078  6c50              LDR      r0,[r2,#0x44]
00007a  6800              LDR      r0,[r0,#0]
00007c  6a94              LDR      r4,[r2,#0x28]
00007e  6020              STR      r0,[r4,#0]
;;;59           Scanold->Ptr = DataPtr;                                      /* Mark it chained in. */
000080  6c54              LDR      r4,[r2,#0x44]
000082  6a90              LDR      r0,[r2,#0x28]
000084  6020              STR      r0,[r4,#0]
;;;60           Val = Stopper;
000086  f9b2104c          LDRSH    r1,[r2,#0x4c]
                  |L1.138|
;;;61         };
;;;62         
;;;63         /* Step Median Ptrer down chain after doing odd-numbered element */
;;;64         Median = Median->Ptr;                                          /* Step Median Ptrer. */
00008a  6c90              LDR      r0,[r2,#0x48]
00008c  6800              LDR      r0,[r0,#0]
00008e  6490              STR      r0,[r2,#0x48]
;;;65         if ( Scan == &Small )                                            
000090  f102002c          ADD      r0,r2,#0x2c
000094  6c14              LDR      r4,[r2,#0x40]
000096  4284              CMP      r4,r0
000098  d100              BNE      |L1.156|
;;;66         {                                                                
;;;67           break;                                                       /* Break at end of chain */
00009a  e029              B        |L1.240|
                  |L1.156|
;;;68         }                                                                
;;;69     	                                                                 
;;;70         Scanold = Scan;                                                /* Save this Ptrer and */
00009c  6c10              LDR      r0,[r2,#0x40]
00009e  6450              STR      r0,[r2,#0x44]
;;;71         Scan = Scan->Ptr;                                              /* step down chain */
0000a0  6c10              LDR      r0,[r2,#0x40]
0000a2  6800              LDR      r0,[r0,#0]
0000a4  6410              STR      r0,[r2,#0x40]
;;;72         
;;;73         /* Handle even-numbered item in chain. */
;;;74         if ( Scan->Ptr == DataPtr )
0000a6  6c10              LDR      r0,[r2,#0x40]
0000a8  6800              LDR      r0,[r0,#0]
0000aa  6a94              LDR      r4,[r2,#0x28]
0000ac  42a0              CMP      r0,r4
0000ae  d102              BNE      |L1.182|
;;;75         {
;;;76           Scan->Ptr = Successor;
0000b0  e9d2040f          LDRD     r0,r4,[r2,#0x3c]
0000b4  6020              STR      r0,[r4,#0]
                  |L1.182|
;;;77         }
;;;78         
;;;79         if ( Scan->Val < Val )
0000b6  6c10              LDR      r0,[r2,#0x40]
0000b8  f9b00004          LDRSH    r0,[r0,#4]
0000bc  4288              CMP      r0,r1
0000be  da08              BGE      |L1.210|
;;;80         {
;;;81           DataPtr->Ptr = Scanold->Ptr;
0000c0  6c50              LDR      r0,[r2,#0x44]
0000c2  6800              LDR      r0,[r0,#0]
0000c4  6a94              LDR      r4,[r2,#0x28]
0000c6  6020              STR      r0,[r4,#0]
;;;82           Scanold->Ptr = DataPtr;
0000c8  6c54              LDR      r4,[r2,#0x44]
0000ca  6a90              LDR      r0,[r2,#0x28]
0000cc  6020              STR      r0,[r4,#0]
;;;83           Val = Stopper;
0000ce  f9b2104c          LDRSH    r1,[r2,#0x4c]
                  |L1.210|
;;;84         }
;;;85         
;;;86         if ( Scan == &Small )
0000d2  f102002c          ADD      r0,r2,#0x2c
0000d6  6c14              LDR      r4,[r2,#0x40]
0000d8  4284              CMP      r4,r0
0000da  d100              BNE      |L1.222|
;;;87         {
;;;88           break;
0000dc  e008              B        |L1.240|
                  |L1.222|
;;;89         }
;;;90         
;;;91         Scanold = Scan;
0000de  6c10              LDR      r0,[r2,#0x40]
0000e0  6450              STR      r0,[r2,#0x44]
;;;92         Scan = Scan->Ptr;
0000e2  6c10              LDR      r0,[r2,#0x40]
0000e4  6800              LDR      r0,[r0,#0]
0000e6  6410              STR      r0,[r2,#0x40]
0000e8  1c58              ADDS     r0,r3,#1              ;48
0000ea  b283              UXTH     r3,r0                 ;48
                  |L1.236|
0000ec  2b05              CMP      r3,#5                 ;48
0000ee  dbb6              BLT      |L1.94|
                  |L1.240|
0000f0  bf00              NOP                            ;67
;;;93       }
;;;94      
;;;95       return Median->Val;
0000f2  6c90              LDR      r0,[r2,#0x48]
0000f4  f9b00004          LDRSH    r0,[r0,#4]
;;;96     }
0000f8  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i._ZN13TMedianFilterC1Es||, CODE, READONLY, ALIGN=1

                  _ZN13TMedianFilterC2Es                  ; Alternate entry point ; TMedianFilter::TMedianFilter__sub_object(short)
                  _ZN13TMedianFilterC1Es PROC ; TMedianFilter::TMedianFilter(short)
;;;3      
;;;4      TMedianFilter::TMedianFilter( int16_t _Stopper )
;;;5      :
;;;6      DataPtr( Buf ),
;;;7      Small( { nullptr, _Stopper } ),
;;;8      Big( { &Small, 0 } ),
;;;9      Stopper( _Stopper )
;;;10     {
;;;11     
;;;12     }
;;;13     
000000  6280              STR      r0,[r0,#0x28]
000002  2200              MOVS     r2,#0
000004  62c2              STR      r2,[r0,#0x2c]
000006  8601              STRH     r1,[r0,#0x30]
000008  f100022c          ADD      r2,r0,#0x2c
00000c  6342              STR      r2,[r0,#0x34]
00000e  2300              MOVS     r3,#0
000010  8703              STRH     r3,[r0,#0x38]
000012  f8a0104c          STRH     r1,[r0,#0x4c]
000016  4770              BX       lr
                          ENDP


                          AREA ||i._ZN13TMedianFilterD1Ev||, CODE, READONLY, ALIGN=1

                  _ZN13TMedianFilterD2Ev                  ; Alternate entry point ; TMedianFilter::~TMedianFilter__sub_object()
                  _ZN13TMedianFilterD1Ev PROC ; TMedianFilter::~TMedianFilter()
;;;13     
;;;14     TMedianFilter::~TMedianFilter()
;;;15     {
;;;16     
;;;17     }
;;;18     
000000  4770              BX       lr
                          ENDP


                          AREA ||.ARM.exidx||, LINKORDER=||i._ZN13TMedianFilterC1Es||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._ZN13TMedianFilterC1Es||
                          DCD      0x00000001

                          AREA ||area_number.5||, LINKORDER=||i._ZN13TMedianFilterD1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN13TMedianFilterD1Ev||
                          DCD      0x00000001

                          AREA ||area_number.6||, LINKORDER=||i._ZN13TMedianFilter7processEs||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN13TMedianFilter7processEs||
                          DCD      0x00000001
